{{- $secretName := "database" -}}

{{- $key := "" }}
{{- if .Values.common.secrets.externalSecretRef }}
{{- $key = (printf "%s/%s" .Values.common.secrets.externalSecretRef $secretName) }}
{{- else }}
{{- $key = (printf "govuk/%s/%s/%s" $.Release.Namespace $.Release.Name $secretName) }}
{{- end }}

apiVersion: external-secrets.io/v1alpha1
kind: ExternalSecret
metadata:
  name: "{{ $.Release.Name }}-{{ $secretName }}"
  labels:
    {{- include "publishing-api.labels" . | nindent 4 }}
spec:
  refreshInterval: "{{ $.Values.common.secrets.externalSecretRefreshInterval }}"
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: "{{ $.Release.Name }}-{{ $secretName }}"
    template:
      data:
        url: postgresql://{{"{{ .username | toString }}"}}:{{"{{ .password | toString }}"}}@{{"{{ .host | toString }}"}}/{{"{{ .dbname | toString }}"}}
  data:
  - secretKey: username
    remoteRef:
      key: {{ $key }}
      property: username
  - secretKey: password
    remoteRef:
      key: {{ $key }}
      property: password
  - secretKey: host
    remoteRef:
      key: {{ $key }}
      property: host
  - secretKey: dbname
    remoteRef:
      key: {{ $key }}
      property: dbname
