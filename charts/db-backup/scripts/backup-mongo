#!/bin/bash
set -euo pipefail

source_dir=$(dirname "${BASH_SOURCE[0]}")
. "$source_dir/lib.sh"

db_url="${DB_MONGO_CONNECTION_STRING%/}/$DB_DATABASE"

backup () {
  local s3_path
  s3_path="$DB_HOST/$(date -u +%Y-%m-%dT%H%M%SZ)-$DB_DATABASE.gz"
  mongodump "$db_url" --archive \
    | progress | gzip -1 | s5cmd pipe "$BUCKET/$s3_path"
}

dump_is_readable () {
  set +o pipefail  # We expect SIGPIPE here, but only here.
  s5cmd cat "$1" | gzip -d | head -c 100 | grep -q concurrent_collections
  local ret=$?
  set -o pipefail
  return $ret
}

restore () {
  : "${FILENAME:=$(list | tail -1)}"  # Use latest dump if not specified.
  if [[ "$GOVUK_ENVIRONMENT" = *"prod"* ]]; then
    : "${REALLY_RESTORE_ONTO_PRODUCTION?}"
  fi
  local s3_url="$BUCKET/$DB_HOST/$FILENAME"
  dump_is_readable "$s3_url"

  s5cmd cat "$s3_url" | gzip -d | mongorestore "$db_url" --archive --drop
}

transform () {
  shift
  (cd "$source_dir" && mongosh "$db_url" < "$1")
}

subcommand=${1:-}
[[ $(type -t "$subcommand") == function ]] || usage

$subcommand "$@"
echo "done"
