#!/bin/bash
set -euo pipefail

source_dir=$(dirname "${BASH_SOURCE[0]}")
. "$source_dir/lib.sh"

: "${DB_MONGO_REPLICASET:=$DB_HOST}"

backup () {
  local s3_path
  s3_path="$DB_HOST/$(date -u +%Y-%m-%dT%H%M%SZ)-$DB_DATABASE.gz"
  mongodump -h "$DB_MONGO_REPLICASET" --archive \
    | progress | gzip -1 | aws s3 cp - "$BUCKET/$s3_path"
}

dump_is_readable () {
  set +o pipefail  # We expect SIGPIPE here, but only here.
  (aws s3 cp "$s3_url" - 2>/dev/null) | gzip -d | head -c 100 \
    | grep -q concurrent_collections
  local ret=$?
  set -o pipefail
  return $ret
}

restore () {
  : "${FILENAME:=$(list | tail -1)}"  # Use latest dump if not specified.
  if [[ "$GOVUK_ENVIRONMENT" = *"prod"* ]]; then
    : "${REALLY_RESTORE_ONTO_PRODUCTION?}"
  fi
  local s3_url="$BUCKET/$DB_HOST/$FILENAME"
  s3_url="$s3_url" dump_is_readable

  aws s3 cp "$s3_url" - | gzip -d | progress | \
    mongorestore -h "$DB_MONGO_REPLICASET" --archive --drop
}

subcommand=${1:-}
[[ $(type -t "$subcommand") == function ]] || usage

write_config
[[ "${VERBOSE:-0}" -ge 1 ]] && set -x
$subcommand "$@"
echo "done"
