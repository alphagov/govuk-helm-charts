#!/bin/bash
set -eu

source_dir=$(dirname "${BASH_SOURCE[0]}")
. "$source_dir/lib.sh"

backup () {
  local s3_path
  s3_path="$DB_HOST/$(date -u +%Y-%m-%dT%H%M%SZ)-$DB_DATABASE.gz"
  set -o pipefail
  mysqldump --single-transaction "$DB_DATABASE" \
    | progress | gzip -1 | s5cmd pipe "$BUCKET/$s3_path"
  set +o pipefail
}

transform () {
  shift
  (cd "$source_dir" && mysql "$DB_DATABASE" < "$1")
}

dump_is_readable () {
  s5cmd cat "$1" | gzip -d | head -n5 \
    | tee /dev/fd/2 | grep 'MySQL dump' >/dev/null 2>&1
}

restore () {
  : "${FILENAME:=$(list | tail -1)}"  # Use latest dump if not specified.
  if [[ "$GOVUK_ENVIRONMENT" = *"prod"* ]]; then
    : "${REALLY_RESTORE_ONTO_PRODUCTION?}"
  fi
  local s3_url="$BUCKET/$DB_HOST/$FILENAME"
  dump_is_readable "$s3_url"
  mysqladmin drop -f "$DB_DATABASE" || true
  mysqladmin create "$DB_DATABASE"
  s5cmd cat "$s3_url" | gzip -d | progress | mysql "$DB_DATABASE"
}

write_config () {
  cat > "$HOME/.my.cnf" <<EOF
[client]
user=$DB_USER
password=$DB_PASSWORD
host=$DB_HOST
[mysql]
init-command="SET SESSION unique_checks=0, foreign_key_checks=0;"
[mysqldump]
set-gtid-purged=OFF  # https://bugs.mysql.com/bug.php?id=109685#c530123
EOF
}

subcommand=${1:-}
[[ $(type -t "$subcommand") == function ]] || usage

write_config
[[ "${VERBOSE:-0}" -ge 1 ]] && set -x
$subcommand "$@"
echo "done"
