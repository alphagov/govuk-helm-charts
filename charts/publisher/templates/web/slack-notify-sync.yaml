apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-slack-msg-success
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
      - name: slack-notification
        # TODO: Remove DockerHub dependency
        image: curlimages/curl
        command:
          - "curl"
          - "-X"
          - "POST"
          - "--data-urlencode"
          - >
              payload={
                "channel": "#govuk-deploy-alerts",
                "username": "argocd",
                "text": "{{ .Release.Name }} sync succeeded (image_tag: {{ .Values.common.image.tag }}) :deployparrot:",
                "icon_emoji": ":kubernetes:"
              }
          - "$(SLACK_WEBHOOK_ENDPOINT)"
        env:
          - name: SLACK_WEBHOOK_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: slack-webhook-url
                key: url
      restartPolicy: Never
  backoffLimit: 2
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-slack-msg-fail
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
      - name: slack-notification
        # TODO: Remove DockerHub dependency
        image: curlimages/curl
        command:
          - "curl"
          - "-X"
          - "POST"
          - "--data-urlencode"
          - >
              payload={
                "channel": "#govuk-deploy-alerts",
                "username": "argocd",
                "text": "{{ .Release.Name }} sync failed (image_tag: {{ .Values.common.image.tag }}) :sadparrot:",
                "icon_emoji": ":kubernetes:"
              }
          - "${SLACK_WEBHOOK_ENDPOINT}"
        env:
          - name: SLACK_WEBHOOK_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: slack-webhook-url
                key: url
      restartPolicy: Never
  backoffLimit: 2
