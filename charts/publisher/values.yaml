# Default values for Publisher.

# Values common to both Web and Worker deployments
common:
  govukEnvironment: test
  govukDomainExternal: govuk.digital
  govukDomainInternal: svc.cluster.local

  image: &commonImage
    repository: 172025368201.dkr.ecr.eu-west-1.amazonaws.com/publisher
    pullPolicy: Always
    tag: latest

  secrets:
    prefix: "govuk/"
    keys:
      - ASSET_MANAGER_BEARER_TOKEN
      - FACT_CHECK_PASSWORD
      - FACT_CHECK_REPLY_TO_ADDRESS
      - FACT_CHECK_REPLY_TO_ID
      - GA_UNIVERSAL_ID
      - GDS_SSO_OAUTH_ID
      - GDS_SSO_OAUTH_SECRET
      - GOVUK_NOTIFY_API_KEY
      - GOVUK_NOTIFY_TEMPLATE_ID
      - JWT_AUTH_SECRET
      - LINK_CHECKER_API_BEARER_TOKEN
      - LINK_CHECKER_API_SECRET_TOKEN
      - MONGODB_URI
      - PUBLISHING_API_BEARER_TOKEN
      - SECRET_KEY_BASE

  env:
    assetsPrefix: "/assets/publisher"
    basicAuthUsername: "gds"
    defaultTtl: "1800"
    emailGroupBusiness: "test-address@digital.cabinet-office.gov.uk"
    emailGroupCitizen: "test-address@digital.cabinet-office.gov.uk"
    emailGroupForcePublishAlerts: "test-address@digital.cabinet-office.gov.uk"
    factCheckSubjectPrefix: "dev"
    factCheckUsername: "govuk-fact-check-test@digital.cabinet-office.gov.uk"
    govukAppDomain:
    govukAppName:
    govukAppRoot: "/app"
    govukAppType: "rack"
    govukWebsiteRoot:
    govukAssetRoot:
    assetHost:
    plekServicePublishingApiUri:
    plekServiceSignonUri:
    plekServiceContentStoreUri:
    plekServicePublisherUri:
    plekServiceStaticUri:
    railsEnv:
    redisUrl: "redis://redis.ecs.test.govuk-internal.digital:6379" # TODO: decide on Redis for EKS

web:
  replicas: 1

  port: 3000

  image: *commonImage

  nginx:
    image:
      repository: nginx
      pullPolicy: Always
      tag: stable
    port: 80

  service:
    type: NodePort
    annotations: {}
    port: 80

  ingress:
    enabled: true
    name: publisher
    host:
    path: "/"
    pathType: Prefix
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/load-balancer-name: publisher
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"
      alb.ingress.kubernetes.io/healthcheck-path: /healthcheck/ready

  resources: {}
  # If you do want to specify resources, uncomment the following lines,
  # adjust them as necessary, and remove the curly braces after 'resources:'.
  #
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

worker:
  replicas: 1

  image: *commonImage

  resources: {}
  # If you do want to specify resources, uncomment the following lines,
  # adjust them as necessary, and remove the curly braces after 'resources:'.
  #
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

dbMigrationEnabled: true
