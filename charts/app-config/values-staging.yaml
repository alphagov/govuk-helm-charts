# Defaults for all apps in this environment. These can be overridden for
# individual apps below.

govukEnvironment: staging
externalDomainSuffix: staging.publishing.service.gov.uk
k8sExternalDomainSuffix: eks.staging.govuk.digital
publishingDomainSuffix: staging.publishing.service.gov.uk
assetsDomain: assets.staging.publishing.service.gov.uk
dguDomain: staging.data.gov.uk

awsAccountId: "696911096973"

cspReportURI: https://csp-reporter.staging.publishing.service.gov.uk/report

replicaCount: 2
workerReplicaCount: 2
podDisruptionBudget: &pdb
  minAvailable: 1
appResources:
  limits:
    cpu: 1
    memory: 1500Mi
  requests:
    cpu: 0.1
    memory: 800Mi

_alb-ingress-defaults: &alb-ingress-defaults
  alb.ingress.kubernetes.io/scheme: internet-facing
  alb.ingress.kubernetes.io/target-type: ip
  alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
  alb.ingress.kubernetes.io/ssl-redirect: "443"
  alb.ingress.kubernetes.io/healthcheck-path: /readyz
  alb.ingress.kubernetes.io/load-balancer-name: "{{ .Release.Name }}"
  alb.ingress.kubernetes.io/load-balancer-attributes: >
    access_logs.s3.enabled=true,
    access_logs.s3.bucket=govuk-{{ .Values.govukEnvironment }}-aws-logging,
    access_logs.s3.prefix=elb/{{ .Release.Name }}
  alb.ingress.kubernetes.io/shield-advanced-protection: "true"

_alb-ingress-waf-ruleset-www: &alb-ingress-waf-ruleset-www
  alb.ingress.kubernetes.io/wafv2-acl-arn: >-
    arn:aws:wafv2:eu-west-1:696911096973:regional/webacl/cache_public_web_acl/350c0e9c-6d40-419b-b5f7-ce2f92e64bfe

_alb-ingress-waf-ruleset-backend: &alb-ingress-waf-ruleset-backend
  alb.ingress.kubernetes.io/wafv2-acl-arn: >-
    arn:aws:wafv2:eu-west-1:696911096973:regional/webacl/backend_public_web_acl/c9585984-e065-462b-8e78-601aae0cabd8

_alb-ingress-group-backend: &alb-ingress-group-backend
  <<: *alb-ingress-waf-ruleset-backend
  alb.ingress.kubernetes.io/group.name: backend
  alb.ingress.kubernetes.io/load-balancer-name: backend
  alb.ingress.kubernetes.io/load-balancer-attributes: >
    access_logs.s3.enabled=true,
    access_logs.s3.bucket=govuk-{{ .Values.govukEnvironment }}-aws-logging,
    access_logs.s3.prefix=elb/backend


# Apps for Argo CD to deploy, along with any app-specific Helm values.

govukApplications:
  - name: account-api
    helmValues:
      uploadAssets:
        enabled: false
      dbMigrationEnabled: true
      workerEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "10"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "account-api.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: account-api.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: account-api-postgres
              key: DATABASE_URL
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-account-api-email-alert-api
              key: bearer_token
        - name: GOVUK_ACCOUNT_OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: govuk-account-oauth
              key: GOVUK_ACCOUNT_OAUTH_CLIENT_ID
        - name: GOVUK_ACCOUNT_OAUTH_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: govuk-account-oauth
              key: GOVUK_ACCOUNT_OAUTH_PRIVATE_KEY
        - name: GOVUK_ACCOUNT_OAUTH_PROVIDER_URI
          valueFrom:
            secretKeyRef:
              name: govuk-account-oauth
              key: GOVUK_ACCOUNT_OAUTH_PROVIDER_URI
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: account-api-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: 6074fdc2-03b3-4bb6-83fe-31220779c13b
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-account-api-publishing-api
              key: bearer_token
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: account-api-session-secret
              key: session_secret
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-account-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-account-api
              key: oauth_secret
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: asset-manager
    chartPath: charts/asset-manager
    helmValues:
      workerEnabled: true
      redis:
        enabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-defaults, *alb-ingress-waf-ruleset-www]
          alb.ingress.kubernetes.io/load-balancer-name: assets-origin
          alb.ingress.kubernetes.io/group.name: assets-origin
          alb.ingress.kubernetes.io/group.order: "20"
          alb.ingress.kubernetes.io/security-groups: eks_ingress_www_origin
          alb.ingress.kubernetes.io/load-balancer-attributes: &assets-lb-attributes >
            access_logs.s3.enabled=true,
            access_logs.s3.bucket=govuk-{{ .Values.govukEnvironment }}-aws-logging,
            access_logs.s3.prefix=elb/assets-origin
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: &assets-lb-conditions >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "*assets*.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: assets-origin.{{ .Values.k8sExternalDomainSuffix }}
            paths:
              - path: /government/uploads/
              - path: /government/assets/
              - path: /media/
              - path: /auth/gds  # Viewing draft assets requires user auth.
          - name: draft-assets.{{ .Values.k8sExternalDomainSuffix }}
            paths:
              - path: /government/uploads/
              - path: /government/assets/
              - path: /media/
              - path: /auth/gds  # Viewing draft assets requires user auth.
      assetManagerNFS: &assets-nfs assets.staging.govuk-internal.digital
      nginxConfigMap:
        create: false
        name: asset-manager-nginx-conf
      extraEnv:
        - name: ASSET_MANAGER_CLAMSCAN_PATH
          value: /usr/local/bin/clamdscan
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-asset-manager
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-asset-manager
              key: oauth_secret
        - name: JWT_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-jwt-auth-secret
              key: JWT_AUTH_SECRET
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: asset-manager-docdb
              key: MONGODB_URI
        - name: RAILS_LOG_LEVEL
          value: warn
        - name: AWS_S3_BUCKET_NAME
          value: govuk-assets-staging

  - name: argo-services
    chartPath: charts/argo-services
    postSyncWorkflowEnabled: "false"
    helmValues:
      nextEnvironment: production

  - name: authenticating-proxy
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "20"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "draft-origin.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: draft-origin.{{ .Values.k8sExternalDomainSuffix }}
      uploadAssets:
        enabled: false
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-postgres
              key: DATABASE_URL
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-content-preview
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-content-preview
              key: oauth_secret
        - name: GOVUK_UPSTREAM_URI
          value: "http://draft-router"
        - name: JWT_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-jwt-auth-secret
              key: JWT_AUTH_SECRET

  - name: bouncer
    helmValues:
      rails:
        enabled: false
      uploadAssets:
        enabled: false
      ingress:
        enabled: true
        tls: {}
        annotations:
          <<: *alb-ingress-waf-ruleset-www
          alb.ingress.kubernetes.io/scheme: internet-facing
          alb.ingress.kubernetes.io/target-type: ip
          alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
          alb.ingress.kubernetes.io/healthcheck-path: /readyz
          alb.ingress.kubernetes.io/security-groups: eks_ingress_www_origin
          alb.ingress.kubernetes.io/shield-advanced-protection: "true"
          external-dns.alpha.kubernetes.io/hostname: bouncer.{{ .Values.k8sExternalDomainSuffix }}
        rules:
          - http:  # Match all hostnames.
              paths:
                - path: "/"
                  pathType: Prefix
                  backend:
                    service:
                      name: bouncer
                      port:
                        number: 80
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bouncer-postgres
              key: DATABASE_URL
      nginxConfigMap:
        extraServerConf: |
          # TODO: Find out which council is using this and ask them to update.
          location /eff/action/worldPayCallback {
            proxy_pass https://www.gov.uk/apply-for-a-licence/payment/worldpayCallback;
          }

  - name: collections
    helmValues:
      appResources:
        limits:
          cpu: 2
          memory: 1500Mi
        requests:
          cpu: 1
          memory: 1Gi
      extraEnv:
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-collections-email-alert-api
              key: bearer_token

  - name: draft-collections
    repoName: collections
    helmValues:
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false
      uploadAssets:
        enabled: false
      extraEnv:
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-collections-email-alert-api
              key: bearer_token
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-

  - name: collections-publisher
    helmValues:
      dbMigrationEnabled: true
      workerEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "30"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "collections-publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: collections-publisher.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-collections-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-collections-publisher
              key: oauth_secret
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-collections-publisher-link-checker-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-collections-publisher-publishing-api
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-collections-publisher-email-alert-api
              key: bearer_token
        - name: JWT_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-jwt-auth-secret
              key: JWT_AUTH_SECRET
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: collections-publisher-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: &publishing-notify-template 112842bb-d8a4-4511-90de-57dc5c8f27ec
        - name: PUBLISH_WITHOUT_2I_EMAIL
          value: mainstream-publisher-notifications-staging@digital.cabinet-office.gov.uk
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: collections-publisher-mysql
              key: DATABASE_URL
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: contacts-admin
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "40"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "contacts-admin.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: contacts-admin.{{ .Values.k8sExternalDomainSuffix }}
      cronTasks:
        - name: org-import
          task: "organisations:import"
          schedule: "0 3 * * *"
      redis:
        enabled: true
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: contacts-admin-mysql
              key: DATABASE_URL
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-contacts
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-contacts
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-contacts-publishing-api
              key: bearer_token

  - name: content-data-admin
    helmValues:
      redis:
        enabled: true
      ingress:
        enabled: true
        redirect: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "50"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "content-data.{{ .Values.publishingDomainSuffix }}"
            ]}}]
          alb.ingress.kubernetes.io/actions.{{ .Release.Name }}-redirect: >
            {
              "Type":"redirect",
              "RedirectConfig": {
                "Host":"content-data.{{ .Values.publishingDomainSuffix }}",
                "Path":"/#{path}",
                "Port":"443",
                "Protocol":"HTTPS",
                "Query":"#{query}",
                "StatusCode":"HTTP_301"
              }
            }
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}-redirect: >
            [{"field":"host-header","hostHeaderConfig":{"values":[
                "content-data-admin.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: content-data.{{ .Values.k8sExternalDomainSuffix }}
      nginxProxyReadTimeout: 60s
      workerEnabled: true
      extraEnv:
        - name: CONTENT_DATA_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-data-admin-content-data-api
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-data-admin-email-alert-api
              key: bearer_token
        - name: SITEIMPROVE_API_CLIENT_USERNAME
          valueFrom:
            secretKeyRef:
              name: content-data-admin-siteimprove-api-client
              key: username
        - name: SITEIMPROVE_API_CLIENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: content-data-admin-siteimprove-api-client
              key: password
        - name: SITEIMPROVE_SITE_ID
          value: "27169161461"
        # These GA/GTM values are not secrets (not even the the gtm_auth one).
        # https://github.com/alphagov/govuk-puppet/pull/8041
        - name: GOOGLE_TAG_MANAGER_AUTH
          value: xcAlGBhKTIeO6y_JhmEapQ
        - name: GOOGLE_TAG_MANAGER_ID
          value: GTM-NZG8SF2
        - name: GOOGLE_TAG_MANAGER_PREVIEW
          value: env-5
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-content-data
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-content-data
              key: oauth_secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: content-data-admin-aws
              key: access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: content-data-admin-aws
              key: secret_key
        - name: AWS_CSV_EXPORT_BUCKET_NAME
          value: govuk-staging-content-data-csvs
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: content-data-admin-postgres
              key: DATABASE_URL
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: content-data-admin-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: FIND_CONTENT_QUERY_PAGE_SIZE
          value: "1000"

  - name: content-data-api
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "60"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "content-data-api.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: content-data-api.{{ .Values.k8sExternalDomainSuffix }}
      nginxProxyReadTimeout: 60s
      uploadAssets:
        enabled: false
      dbMigrationEnabled: true
      workerEnabled: true
      workers:
        - command: ["sidekiq", "-C", "config/sidekiq.yml"]
          name: worker
        - command: ['rake', 'publishing_api:consumer']
          name: publishing-api-consumer
        - command: ['rake', 'publishing_api:bulk_import_consumer']
          name: bulk-import-publishing-api-consumer
      cronTasks:
        - name: etl
          task: "etl:main"
          schedule: "15 11 * * *"
      extraEnv:
        - name: GOOGLE_ANALYTICS_GOVUK_VIEW_ID
          valueFrom:
            secretKeyRef:
              name: content-data-api-google-analytics
              key: view-id
        - name: GOOGLE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: content-data-api-google-analytics
              key: client-email
        - name: GOOGLE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: content-data-api-google-analytics
              key: private-key
        - name: BIGQUERY_PROJECT
          valueFrom:
            secretKeyRef:
              name: content-data-api-ga4
              key: project_id
        - name: BIGQUERY_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: content-data-api-ga4
              key: client_email
        - name: BIGQUERY_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: content-data-api-ga4
              key: private_key
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-content-data-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-content-data-api
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-data-api-publishing-api
              key: bearer_token
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: content-data-api-postgres
              key: DATABASE_URL
        - name: SUPPORT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-data-api-support-api
              key: bearer_token
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: content-data-api-rabbitmq
              key: RABBITMQ_URL
        - name: RABBITMQ_QUEUE
          value: content_data_api
        - name: RABBITMQ_QUEUE_BULK
          value: content_data_api_govuk_importer
        - name: RABBITMQ_QUEUE_DEAD
          value: content_data_api_dead_letter_queue

  - name: content-publisher
    helmValues:
      dbMigrationEnabled: true
      nginxClientMaxBodySize: &max-upload-size 500M
      workerEnabled: true
      redis:
        enabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "70"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "content-publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: content-publisher.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-publisher-asset-manager
              key: bearer_token
        - name: AWS_S3_BUCKET
          value: govuk-staging-content-publisher-activestorage
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: content-publisher-postgres
              key: DATABASE_URL
        - name: EMAIL_ADDRESS_OVERRIDE
          value: content-publisher-notifications-staging@digital.cabinet-office.gov.uk
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-content-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-content-publisher
              key: oauth_secret
        # These GTM values are not secrets (not even the the gtm_auth one).
        # https://github.com/alphagov/govuk-puppet/pull/8041
        - name: GOOGLE_TAG_MANAGER_ID
          value: &static-gtm-id GTM-NQXC4TG
        - name: GOOGLE_TAG_MANAGER_AUTH  # Non-prod only.
          value: &static-gtm-auth QaRG0YPL6_pwZdxCbyMXPQ
        - name: GOOGLE_TAG_MANAGER_PREVIEW  # Non-prod only.
          value: &static-gtm-preview env-5
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: content-publisher-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: JWT_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-jwt-auth-secret
              key: JWT_AUTH_SECRET
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-publisher-publishing-api
              key: bearer_token
        - name: WHITEHALL_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-publisher-whitehall
              key: bearer_token

  - name: content-store
    helmValues: &content-store
      dbMigrationEnabled: true
      nginxClientMaxBodySize: 20M
      replicaCount: 6
      cronTasks:
        - name: report-delays
          task: "publishing_delay_report:report_delays"
          schedule: "15 2 * * *"
      uploadAssets:
        enabled: false
      extraEnv:
        - name: SENTRY_ENVIRONMENT
          value: "postgresql-staging"
        - name: ROUTER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-store-router-api
              key: bearer_token
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-content-store
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-content-store
              key: oauth_secret
        - name: DEFAULT_TTL
          value: "300"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: content-store-postgres
              key: DATABASE_URL
        - name: WEB_CONCURRENCY
          value: '4'

  - name: db-backup
    chartPath: charts/db-backup
    postSyncWorkflowEnabled: "false"
    helmValues:
      # https://github.com/alphagov/govuk-infrastructure/blob/main/terraform/deployments/govuk-publishing-infrastructure/db_backup_s3.tf
      serviceAccount:
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::696911096973:role/db-backup-govuk

  - name: draft-content-store
    repoName: content-store
    helmValues:
      <<: *content-store
      rails:
        createKeyBaseSecret: false
        # use the same secret as the main content-store, it will reduce toil
        secretKeyBaseName: content-store-rails-secret-key-base
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
        dsnSecretName: content-store-sentry
      extraEnv:
        - name: SENTRY_ENVIRONMENT
          value: "postgresql-draft-staging"
        - name: ROUTER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-draft-content-store-draft-router-api
              key: bearer_token
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-draft-content-store
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-draft-content-store
              key: oauth_secret
        - name: DEFAULT_TTL
          value: "1"
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: draft-content-store-postgres
              key: DATABASE_URL

  - name: content-tagger
    helmValues:
      dbMigrationEnabled: true
      workerEnabled: true
      redis:
        enabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "80"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "content-tagger.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: content-tagger.{{ .Values.k8sExternalDomainSuffix }}
      cronTasks:
        - name: taxonomy-health-checks
          task: "taxonomy:health_checks"
          schedule: "49 * * * *"
        - name: taxonomy-metrics
          task: "metrics:taxonomy:record_all"
          schedule: "14 * * * *"
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-content-tagger
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-content-tagger
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-tagger-publishing-api
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-content-tagger-email-alert-api
              key: bearer_token
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: content-tagger-postgres
              key: DATABASE_URL

  - name: email-alert-api
    helmValues:
      dbMigrationEnabled: true
      uploadAssets:
        enabled: false
      workerEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "90"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "email-alert-api-public.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        rules:
          - host: email-alert-api.eks.staging.govuk.digital
            http:
              paths:
                - path: /status-updates
                  pathType: Prefix
                  backend:
                    service:
                      name: email-alert-api
                      port:
                        number: 80
                - path: /spam-reports
                  pathType: Prefix
                  backend:
                    service:
                      name: email-alert-api
                      port:
                        number: 80
      extraEnv:
        - name: ACCOUNT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-email-alert-api-account-api
              key: bearer_token
        - name: ALERT_LISTENER_EMAIL_ACCOUNT
          value: email-alert-api-staging@digital.cabinet-office.gov.uk
        - name: BULK_MIGRATE_CONFIRMATION_EMAIL_ACCOUNT
          value: email-alert-api-staging@digital.cabinet-office.gov.uk
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: email-alert-api-postgres
              key: DATABASE_URL
        - name: EMAIL_ALERT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: email-alert-auth
              key: token
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-email-alert-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-email-alert-api
              key: oauth_secret
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: email-alert-api-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: 2844a647-6bf1-4b01-a25c-569d2cc00849
        - name: GOVUK_NOTIFY_RECIPIENTS
          value: email-alert-api-staging@digital.cabinet-office.gov.uk
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: WEB_CONCURRENCY
          value: '10'
      nginxConfigMap:
        # TODO: consider using WAF for this instead of nginx.
        extraHttpConf: |
          limit_req_zone $binary_remote_addr zone=email_alert_api_public:1M rate=50r/s;
          limit_req_status 429;
        extraServerConf: |
          location ~ ^/(status-updates|spam-reports)(/|$) {
            limit_req zone=email_alert_api_public burst=20 nodelay;
            proxy_pass http://email-alert-api;
          }

  - name: email-alert-frontend
    helmValues:
      extraEnv:
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: ACCOUNT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-email-alert-frontend-account-api
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-email-alert-frontend-email-alert-api
              key: bearer_token
        - name: EMAIL_ALERT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: email-alert-auth
              key: token

  - name: draft-email-alert-frontend
    repoName: email-alert-frontend
    helmValues:
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
      uploadAssets:
        enabled: false
      extraEnv:
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: ACCOUNT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-email-alert-frontend-account-api
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-email-alert-frontend-email-alert-api
              key: bearer_token
        - name: EMAIL_ALERT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: email-alert-auth
              key: token

  - name: email-alert-service
    helmValues:
      appEnabled: false
      podDisruptionBudget: {}
      rails:
        enabled: false
      uploadAssets:
        enabled: false
      workerEnabled: true
      workers:
        - command: ['bin/email-alert-service']
          name: email-alert-service
      extraEnv:
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-email-alert-service-email-alert-api
              key: bearer_token
        # TODO: remove GOVUK_PROMETHEUS_EXPORTER once govuk_app_config >=9.10 is everywhere.
        - name: GOVUK_PROMETHEUS_EXPORTER
          value: force
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: email-alert-service-rabbitmq
              key: RABBITMQ_URL
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: external-secrets
    chartPath: charts/external-secrets
    postSyncWorkflowEnabled: "false"

  - name: feedback
    helmValues:
      extraEnv:
        - name: GOVUK_NOTIFY_SURVEY_SIGNUP_REPLY_TO_ID
          value: 91ee838c-ef9c-4d10-b3d6-5f73441e08b7
        - name: GOVUK_NOTIFY_SURVEY_SIGNUP_TEMPLATE_ID
          value: 9295dc76-91f2-4436-b2ca-4e69a6bc9f23
        - name: SUPPORT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-feedback-support-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-feedback-publishing-api
              key: bearer_token
        - name: ASSISTED_DIGITAL_GOOGLE_SPREADSHEET_KEY
          valueFrom:
            secretKeyRef:
              name: feedback-assisted-digital-google-sheet
              key: sheet_id
        - name: GOOGLE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: feedback-assisted-digital-google-sheet
              key: client_email
        - name: GOOGLE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: feedback-assisted-digital-google-sheet
              key: private_key
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: feedback-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital

  - name: draft-feedback
    repoName: feedback
    helmValues:
      arch: arm64
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
      uploadAssets:
        enabled: false
      extraEnv:
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: GOVUK_NOTIFY_SURVEY_SIGNUP_REPLY_TO_ID
          value: 91ee838c-ef9c-4d10-b3d6-5f73441e08b7
        - name: GOVUK_NOTIFY_SURVEY_SIGNUP_TEMPLATE_ID
          value: 9295dc76-91f2-4436-b2ca-4e69a6bc9f23
        - name: SUPPORT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-feedback-support-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-feedback-publishing-api
              key: bearer_token
        - name: ASSISTED_DIGITAL_GOOGLE_SPREADSHEET_KEY
          valueFrom:
            secretKeyRef:
              name: feedback-assisted-digital-google-sheet
              key: sheet_id
        - name: GOOGLE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: feedback-assisted-digital-google-sheet
              key: client_email
        - name: GOOGLE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: feedback-assisted-digital-google-sheet
              key: private_key
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: feedback-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital

  - name: finder-frontend
    helmValues:
      appResources:
        limits:
          cpu: 4
          memory: 2500Mi
        requests:
          cpu: 2
          memory: 2000Mi
      cronTasks:
        - name: registries-refresh
          task: "registries:cache_refresh"
          schedule: "15 * * * *"
      extraEnv:
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-finder-frontend-email-alert-api
              key: bearer_token
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: WEB_CONCURRENCY
          value: '4'

  - name: draft-finder-frontend
    repoName: finder-frontend
    helmValues:
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
      uploadAssets:
        enabled: false
      cronTasks:
        - name: registries-refresh
          task: "registries:cache_refresh"
          schedule: "15 * * * *"
      extraEnv:
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-finder-frontend-email-alert-api
              key: bearer_token

  - name: frontend
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-defaults, *alb-ingress-waf-ruleset-www]
          alb.ingress.kubernetes.io/load-balancer-name: assets-origin
          alb.ingress.kubernetes.io/group.name: assets-origin
          alb.ingress.kubernetes.io/group.order: "16"
          alb.ingress.kubernetes.io/security-groups: eks_ingress_www_origin
          alb.ingress.kubernetes.io/load-balancer-attributes: *assets-lb-attributes
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: *assets-lb-conditions
        hosts:
          - name: assets-origin.{{ .Values.k8sExternalDomainSuffix }}
            path: /media/*/*/preview
            pathType: ImplementationSpecific
          - name: assets-origin.{{ .Values.k8sExternalDomainSuffix }}
            path: /assets/frontend/
          - name: assets-origin.{{ .Values.k8sExternalDomainSuffix }}
            path: /government/placeholder/
      appResources:
        limits:
          cpu: 4
          memory: 1500Mi
        requests:
          cpu: 2
          memory: 1Gi
      extraEnv:
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: ACCOUNT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-account-api
              key: bearer_token
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-asset-manager
              key: bearer_token
        - name: ELECTIONS_API_KEY
          valueFrom:
            secretKeyRef:
              name: frontend-elections-api
              key: key
        - name: ELECTIONS_API_URL
          valueFrom:
            secretKeyRef:
              name: frontend-elections-api
              key: url
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-email-alert-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-publishing-api
              key: bearer_token
        - name: WEB_CONCURRENCY
          value: '4'

  - name: draft-frontend
    repoName: frontend
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-defaults, *alb-ingress-waf-ruleset-www]
          alb.ingress.kubernetes.io/load-balancer-name: assets-origin
          alb.ingress.kubernetes.io/group.name: assets-origin
          alb.ingress.kubernetes.io/group.order: "15"
          alb.ingress.kubernetes.io/security-groups: eks_ingress_www_origin
          alb.ingress.kubernetes.io/load-balancer-attributes: *assets-lb-attributes
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "draft-assets*.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: draft-assets.{{ .Values.k8sExternalDomainSuffix }}
            path: /media/*/*/preview
            pathType: ImplementationSpecific
          - name: draft-assets.{{ .Values.k8sExternalDomainSuffix }}
            path: /assets/frontend/
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false
      uploadAssets:
        enabled: false
      extraEnv:
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: ACCOUNT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-account-api
              key: bearer_token
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-asset-manager
              key: bearer_token
        - name: ELECTIONS_API_KEY
          valueFrom:
            secretKeyRef:
              name: frontend-elections-api
              key: key
        - name: ELECTIONS_API_URL
          valueFrom:
            secretKeyRef:
              name: frontend-elections-api
              key: url
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-email-alert-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-frontend-publishing-api
              key: bearer_token

  - name: government-frontend
    helmValues:
      appResources:
        limits:
          cpu: 2
          memory: 2Gi
        requests:
          cpu: 1
          memory: 1500Mi
      extraEnv:
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-government-frontend-publishing-api
              key: bearer_token

  - name: draft-government-frontend
    repoName: government-frontend
    helmValues:
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
      uploadAssets:
        enabled: false
      extraEnv:
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-government-frontend-publishing-api
              key: bearer_token

  - name: govuk-chat
    helmValues:
      dbMigrationEnabled: true
      workerEnabled: true
      workers:
        - command: ["sidekiq", "-C", "config/sidekiq.yml"]
          name: worker
        - command: ['rake', 'message_queue:published_documents_consumer']
          name: published-documents-consumer
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "95"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "chat.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: chat.{{ .Values.k8sExternalDomainSuffix }}
      uploadAssets:
        s3Directory: chat
        path: /app/public/assets/chat
      cronTasks:
        - name: promote-waiting-list
          task: "users:promote_waiting_list"
          schedule: "0 7-19 * * *"
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: govuk-chat-postgres
              key: DATABASE_URL
        - name: EMAIL_ADDRESS_OVERRIDE
          value: govuk-chat-notifications-staging@digital.cabinet-office.gov.uk
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: govuk-chat-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: 70883fba-853d-487a-9580-3ea1931ecb49
        - name: OPENAI_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: govuk-chat-open-ai
              key: access_token
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: govuk-chat-rabbitmq
              key: RABBITMQ_URL
        - name: OPENSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: govuk-chat-opensearch
              key: url
        - name: OPENSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: govuk-chat-opensearch
              key: username
        - name: OPENSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: govuk-chat-opensearch
              key: password
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-chat
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-chat
              key: oauth_secret
        - name: REDIS_URL
          value: redis://chat-redis.eks.staging.govuk-internal.digital
        - name: BIGQUERY_PROJECT
          value: "gov-uk-chat-integration"
        - name: BIGQUERY_DATASET
          value: "chat_export"
        - name: BIGQUERY_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: govuk-chat-bigquery
              key: credentials

  - name: govuk-e2e-tests
    chartPath: charts/govuk-e2e-tests
    helmValues:
      cronJobs:
        - name: govuk-e2e-tests
          schedule: "*/10 7-19 * * 1-5"
          project: chromium
        - name: govuk-e2e-tests-mirror-s3
          schedule: "*/30 7-19 * * 1-5"
          project: mirrorS3
        - name: govuk-e2e-tests-mirror-s3-replica
          schedule: "*/30 7-19 * * 1-5"
          project: mirrorS3Replica
        - name: govuk-e2e-tests-mirror-gcs
          schedule: "*/30 7-19 * * 1-5"
          project: mirrorGCS

  - name: govuk-exporter
    chartPath: charts/govuk-exporter
    helmValues:
      replicaCount: 1
      extraEnv:
        - name: MIRROR_FRESHNESS_URL
          value: https://www.{{ .Values.externalDomainSuffix }}/last-updated.txt
        - name: MIRROR_AVAILABILITY_URL
          value: https://www.{{ .Values.externalDomainSuffix }}
        - name: BACKENDS
          value: "mirrorS3,mirrorGCS"

  - name: govuk-jobs
    chartPath: charts/govuk-jobs
    postSyncWorkflowEnabled: "false"
    imageValues:
      - govuk-mirror
    helmValues:
      govukMirrorSync:
        iamRoleArn: arn:aws:iam::696911096973:role/govuk-mirror-sync

  - name: hmrc-manuals-api
    helmValues:
      nginxClientMaxBodySize: 2M
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "100"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "hmrc-manuals-api.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: hmrc-manuals-api.{{ .Values.k8sExternalDomainSuffix }}
      nginxProxyReadTimeout: 300s
      uploadAssets:
        enabled: false
      extraEnv:
        - name: ALLOW_UNKNOWN_HMRC_MANUAL_SLUGS
          value: "1"
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-hmrc-manuals-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-hmrc-manuals-api
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-hmrc-manuals-api-publishing-api
              key: bearer_token
        - name: PUBLISH_TOPICS
          value: "1"
        - name: PUMA_TIMEOUT
          value: "300"

  - name: licensify
    chartPath: charts/licensify
    namespace: licensify
    imageValues:
      - "licensify-admin"
      - "licensify-backend"
      - "licensify-feed"
      - "licensify-frontend"
    helmValues:
      assetManagerNFS: *assets-nfs
      apps:
        licensifyAdmin:
          ingress:
            annotations:
              <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
              alb.ingress.kubernetes.io/group.order: "115"
              alb.ingress.kubernetes.io/conditions.licensify-admin: >
                [{"field": "host-header", "hostHeaderConfig": { "values": [
                    "licensify-admin.{{ .Values.publishingDomainSuffix }}"
                ]}}]
            hosts:
              - name: licensify-admin.{{ .Values.k8sExternalDomainSuffix }}
        licensifyFrontend:
          podDisruptionBudget: *pdb
          ingress:
            annotations:
              <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
            hosts:
              - name: licensify.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: APPLICATION_FORM_AWS_REGION
          value: eu-west-1
        - name: APPLICATION_FORM_BUCKET_NAME
          value: govuk-licensing-application-forms-staging
      config:
        mongo:
          dbHosts:
            - licensify-documentdb-0.ca5itorbs5wc.eu-west-1.docdb.amazonaws.com
            - licensify-documentdb-1.ca5itorbs5wc.eu-west-1.docdb.amazonaws.com
            - licensify-documentdb-2.ca5itorbs5wc.eu-west-1.docdb.amazonaws.com
        adminBaseUrl: https://licensify-admin.staging.publishing.service.gov.uk
        frontendBaseUrl: https://www.staging.publishing.service.gov.uk
        signonBaseUrl: https://signon.staging.publishing.service.gov.uk
        govukBaseUrl: https://www.staging.publishing.service.gov.uk
        performancePlatformUrl: >-
          https://www.staging.performance.service.gov.uk/data/licensing/application
        googleAnalytics:
          accountAdmin: UA-34530684-2
          domainAdmin: staging.publishing.service.gov.uk
          accountFrontend: UA-26179049-20
          domainFrontend: staging.publishing.service.gov.uk
        payments:
          testMode: false
        notify:
          noReplyMailAddress: noreply-licensing+staging@digital.cabinet-office.gov.uk
          emailOverrideRecipient: licensing-notifications+staging@digital.cabinet-office.gov.uk
          templateApplicatNone: f324cd8c-a0b1-48fa-b009-69bdf8ba81b0
          templateApplicatOffline: bbbc408b-4276-498f-9d94-8f76663b258e
          templateApplicatOnline: 8ca00761-7902-4ec3-89a2-e3aa006d3ed8
          templateAuthority: 96af61a3-ffdc-419c-a814-9ce01a78a87f
          templatePeriodic: a3a54578-2695-4953-9787-d7c73aaf08c0

  - name: link-checker-api
    helmValues:
      dbMigrationEnabled: true
      uploadAssets:
        enabled: false
      workerEnabled: true
      redis:
        enabled: true
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-link-checker-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-link-checker-api
              key: oauth_secret
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: link-checker-api-google-api-key
              key: GOOGLE_API_KEY
        - name: GOVUK_BASIC_AUTH_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: basic-auth
              key: password
        - name: GOVUK_USER
          valueFrom:
            secretKeyRef:
              name: basic-auth
              key: username
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: link-checker-api-postgres
              key: DATABASE_URL
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: local-links-manager
    helmValues:
      redis:
        enabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "120"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "local-links-manager.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: local-links-manager.{{ .Values.k8sExternalDomainSuffix }}
      cronTasks:
        - name: import-interact
          task: "import:service_interactions:import_all"
          schedule: "0 1 * * *"
        - name: check-links
          task: "check-links"
          schedule: "0 2 * * *"
        - name: export-links
          task: "export:links:s3"
          schedule: "0 3 * * *"
        - name: import-ga
          task: "import:google_analytics"
          schedule: "0 5 * * *"
        - name: export-ga-bad-links
          task: "export:google_analytics:bad_links"
          schedule: "0 6 * * *"
      dbMigrationEnabled: true
      extraEnv:
        - name: GOOGLE_ANALYTICS_GOVUK_VIEW_ID
          valueFrom:
            secretKeyRef:
              name: local-links-manager-google
              key: govuk-view-id
        - name: GOOGLE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: local-links-manager-google
              key: client-email
        - name: GOOGLE_EXPORT_ACCOUNT_ID
          valueFrom:
            secretKeyRef:
              name: local-links-manager-google
              key: export-account-id
        - name: GOOGLE_EXPORT_CUSTOM_DATA_IMPORT_SOURCE_ID
          valueFrom:
            secretKeyRef:
              name: local-links-manager-google
              key: export-custom-data-import-source-id
        - name: GOOGLE_EXPORT_TRACKER_ID
          valueFrom:
            secretKeyRef:
              name: local-links-manager-google
              key: export-tracker-id
        - name: GOOGLE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: local-links-manager-google
              key: private-key
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-local-links-manager
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-local-links-manager
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-local-links-manager-publishing-api
              key: bearer_token
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-local-links-manager-link-checker-api
              key: bearer_token
        - name: LINK_CHECKER_API_SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              name: local-links-manager-link-checker-api-callback-token
              key: LINK_CHECKER_API_SECRET_TOKEN
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: RUN_LINK_GA_EXPORT
          value: "false"
        - name: AWS_S3_ASSET_BUCKET_NAME
          value: "govuk-app-assets-staging"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: local-links-manager-postgres
              key: DATABASE_URL
      nginxConfigMap:
        extraServerConf: |
          location /data {
            proxy_set_header Authorization "";
            proxy_set_header Connection "";
            proxy_set_header X-Real-IP $remote_addr;  # TODO: pass the actual end-client address
            proxy_hide_header x-amz-id-2;
            proxy_hide_header x-amz-meta-server-side-encryption;
            proxy_hide_header x-amz-request-id;
            proxy_hide_header x-amz-server-side-encryption;
            proxy_hide_header x-amz-version-id;
            add_header Cache-Control "public, max-age=3600";
            proxy_intercept_errors on;
            proxy_pass
              https://govuk-app-assets-staging.s3.eu-west-1.amazonaws.com/data/local-links-manager;
          }

  - name: locations-api
    helmValues:
      uploadAssets:
        enabled: false
      dbMigrationEnabled: true
      workerEnabled: true
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: locations-api-postgres
              key: DATABASE_URL
        - name: RAILS_LOG_LEVEL
          value: warn
        - name: OS_PLACES_API_KEY
          valueFrom:
            secretKeyRef:
              name: locations-api-os-places
              key: api-key
        - name: OS_PLACES_API_SECRET
          valueFrom:
            secretKeyRef:
              name: locations-api-os-places
              key: api-secret
        - name: OS_PLACES_API_POSTCODES_PER_SECOND
          value: "1"
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: manuals-publisher
    helmValues:
      nginxClientMaxBodySize: *max-upload-size
      workerEnabled: true
      redis:
        enabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "130"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "manuals-publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: manuals-publisher.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-manuals-publisher-asset-manager
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-manuals-publisher-email-alert-api
              key: bearer_token
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-manuals-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-manuals-publisher
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-manuals-publisher-publishing-api
              key: bearer_token
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-manuals-publisher-link-checker-api
              key: bearer_token
        - name: LINK_CHECKER_API_SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              name: manuals-publisher-link-checker-api-callback-token
              key: LINK_CHECKER_API_SECRET_TOKEN
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: manuals-publisher-docdb
              key: MONGODB_URI

  - name: maslow
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "140"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "maslow.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: maslow.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-maslow
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-maslow
              key: oauth_secret
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-maslow-publishing-api
              key: bearer_token
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: maslow-docdb
              key: MONGODB_URI

  - name: places-manager
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "110"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "places-manager.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: places-manager.{{ .Values.k8sExternalDomainSuffix }}
      nginxClientMaxBodySize: *max-upload-size
      nginxProxyReadTimeout: 60s
      dbMigrationEnabled: true
      workerEnabled: true
      redis:
        enabled: true
      extraEnv:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: imminence-postgres
              key: DATABASE_URL
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-imminence
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-imminence
              key: oauth_secret

  - name: publisher
    helmValues:
      dbMigrationEnabled: true
      workerEnabled: true
      cronTasks:
        - name: mail-fetcher
          command: "script/mail_fetcher"
          schedule: "*/5 * * * *"
        - name: reports-generate
          task: "reports:generate"
          schedule: "0 * * * *"
        - name: reschedule-pubs-after-db-restore  # non-prod only
          task: "editions:requeue_scheduled_for_publishing"
          schedule: "47 7 * * 1-5"
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "150"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: publisher.{{ .Values.k8sExternalDomainSuffix }}
      nginxProxyReadTimeout: 30s
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-publisher
              key: oauth_secret
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-publisher-asset-manager
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-publisher-publishing-api
              key: bearer_token
        - name: FACT_CHECK_USERNAME
          valueFrom:
            secretKeyRef:
              name: publisher-fact-check-email-account
              key: FACT_CHECK_USERNAME
        - name: FACT_CHECK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: publisher-fact-check-email-account
              key: FACT_CHECK_PASSWORD
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: publisher-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: JWT_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-jwt-auth-secret
              key: JWT_AUTH_SECRET
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-publisher-link-checker-api
              key: bearer_token
        - name: LINK_CHECKER_API_SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              name: publisher-link-checker-api-callback-token
              key: LINK_CHECKER_API_SECRET_TOKEN
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: publisher-docdb
              key: MONGODB_URI
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: EMAIL_GROUP_BUSINESS
          value: mainstream-publisher-notifications-staging@digital.cabinet-office.gov.uk
        - name: EMAIL_GROUP_CITIZEN
          value: mainstream-publisher-notifications-staging@digital.cabinet-office.gov.uk
        - name: EMAIL_GROUP_DEV
          value: mainstream-publisher-notifications-staging@digital.cabinet-office.gov.uk
        - name: EMAIL_GROUP_FORCE_PUBLISH_ALERTS
          value: mainstream-publisher-notifications-staging@digital.cabinet-office.gov.uk
        - name: FACT_CHECK_SUBJECT_PREFIX  # TODO: remove in production.
          value: staging
        - name: FACT_CHECK_REPLY_TO_ADDRESS
          value: govuk-fact-check-staging@digital.cabinet-office.gov.uk
        - name: FACT_CHECK_REPLY_TO_ID
          value: 88f713ff-7de0-43a6-8221-8721bedd103c
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: REPORTS_S3_BUCKET_NAME
          value: govuk-staging-publisher-csvs

  - name: publishing-api
    helmValues:
      nginxClientMaxBodySize: 2M
      dbMigrationEnabled: true
      uploadAssets:
        enabled: false
      workerEnabled: true
      workerResources:
        limits:
          cpu: 4000m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 512Mi
      cronTasks:
        - name: events-export
          task: "events:export_to_s3"
          schedule: "38 5 * * 0"
        - name: metrics-report-to-prometheus
          task: "metrics:report_to_prometheus"
          schedule: "22 * * * *"  # every hour, at 22 minutes past the hour
        # In non-production envs, run Search API v2 bulk import every week to bring it to parity
        # with Publishing API state (which gets refreshed from production DB every night).
        - name: search-api-v2-bulk-import
          task: "queue:requeue_all_the_ever_published_things[bulk.search_api_v2_sync]"
          schedule: "0 8 * * 0"  # every Sunday at 8am
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-publishing-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-publishing-api
              key: oauth_secret
        - name: CONTENT_STORE_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-publishing-api-content-store
              key: bearer_token
        - name: DRAFT_CONTENT_STORE_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-publishing-api-draft-content-store
              key: bearer_token
        - name: ROUTER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-publishing-api-router-api
              key: bearer_token
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: publishing-api-rabbitmq
              key: RABBITMQ_URL
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: EVENT_LOG_AWS_BUCKETNAME
          value: govuk-publishing-api-event-log-staging
        - name: GOVUK_CONTENT_SCHEMAS_PATH
          value: /app/content_schemas
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: publishing-api-postgres
              key: DATABASE_URL

  - name: release
    helmValues:
      dbMigrationEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "160"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "release.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: release.{{ .Values.k8sExternalDomainSuffix }}
      workerEnabled: false
      workerReplicaCount: 1
      podDisruptionBudget:
        minAvailable: 1
      appResources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 400Mi
      workerResources:
        limits:
          cpu: 250m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 400Mi
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-release
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-release
              key: oauth_secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: release-mysql
              key: DATABASE_URL
        - name: GITHUB_USERNAME
          valueFrom:
            secretKeyRef:
              name: release-github
              key: username
        - name: GITHUB_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: release-github
              key: token
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack-webhook-url
              key: url

  - name: router-api
    helmValues: &router-api
      uploadAssets:
        enabled: false
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-router-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-router-api
              key: oauth_secret
        - name: MONGODB_URI  # Hostnames need to match those shown in MongoDB rs.status().
          value: "mongodb://\
            router-mongo-0.router-mongo,\
            router-mongo-1.router-mongo,\
            router-mongo-2.router-mongo/router"

  - name: draft-router-api
    repoName: router-api
    helmValues:
      <<: *router-api
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-draft-router-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-draft-router-api
              key: oauth_secret
        - name: MONGODB_URI  # Hostnames need to match those shown in MongoDB rs.status().
          value: "mongodb://\
            router-mongo-0.router-mongo,\
            router-mongo-1.router-mongo,\
            router-mongo-2.router-mongo/draft_router"

  - name: router
    helmValues:
      rails:
        enabled: false
      uploadAssets:
        enabled: false
      appResources:
        limits:
          cpu: 4
          memory: 2Gi
        requests:
          cpu: 2
          memory: 1Gi
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-defaults, *alb-ingress-waf-ruleset-www]
          alb.ingress.kubernetes.io/security-groups: eks_ingress_www_origin
          alb.ingress.kubernetes.io/load-balancer-name: www-origin
          alb.ingress.kubernetes.io/load-balancer-attributes: >
            access_logs.s3.enabled=true,
            access_logs.s3.bucket=govuk-{{ .Values.govukEnvironment }}-aws-logging,
            access_logs.s3.prefix=elb/www-origin
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "www.{{ .Values.externalDomainSuffix }}",
                "www-origin.{{ .Values.publishingDomainSuffix }}",
                "www.{{ .Values.k8sExternalDomainSuffix }}"
            ]}}]
        hosts:
          - name: www-origin.{{ .Values.k8sExternalDomainSuffix }}
      nginxConfigMap:
        create: false
        name: live-router-nginx-conf
      nginxExtraVolumeMounts:
        - name: live-router-nginx-conf
          mountPath: /usr/share/nginx/html/robots.txt
          subPath: robots.txt
        - name: router-nginx-htpasswd
          mountPath: /etc/nginx/htpasswd
      extraVolumes:
        - name: router-nginx-htpasswd
          secret:
            secretName: router-nginx-htpasswd
      appProbes: &router-app-probes
        startupProbe: &router-probe
          httpGet:
            path: /healthcheck
            port: 9394
          failureThreshold: 10
          periodSeconds: 1
          timeoutSeconds: 1
        livenessProbe:
          <<: *router-probe
          failureThreshold: 3
          periodSeconds: 5
        readinessProbe:
          <<: *router-probe
          httpGet:
            path: /healthcheck
            port: 9394
          failureThreshold: 2
          periodSeconds: 5
      extraEnv:
        - name: GOMAXPROCS
          value: "4"  # Keep this similar to the CPU limit (in whole cores).
        - name: SENTRY_ENVIRONMENT
          value: "staging"
        - name: ROUTER_PUBADDR
          value: ":3000"
        - name: ROUTER_APIADDR
          value: ":9394"
        - name: ROUTER_MONGO_URL
          value: &router_mongo_hosts "\
            router-mongo-0.router-mongo,\
            router-mongo-1.router-mongo,\
            router-mongo-2.router-mongo"
        - name: BACKEND_URL_collections
          value: "http://collections"
        - name: BACKEND_URL_content-store
          value: "http://content-store"
        - name: BACKEND_URL_email-alert-frontend
          value: "http://email-alert-frontend"
        - name: BACKEND_URL_frontend
          value: "http://frontend"
        - name: BACKEND_URL_government-frontend
          value: "http://government-frontend"
        - name: BACKEND_URL_smartanswers
          value: "http://smartanswers"
        - name: BACKEND_URL_static
          value: "http://static"
        - name: BACKEND_URL_account-api
          value: "http://account-api"
        - name: BACKEND_URL_feedback
          value: "http://feedback"
        - name: BACKEND_URL_finder-frontend
          value: "http://finder-frontend"
        - name: BACKEND_URL_licensify
          value: "http://licensify-frontend.licensify"
        - name: BACKEND_URL_search-api
          value: "http://search-api"

  - name: draft-router
    repoName: router
    helmValues:
      rails:
        enabled: false
      sentry:
        createSecret: false  # Sentry DSNs are per repo.
      uploadAssets:
        enabled: false
      appProbes: *router-app-probes
      nginxConfigMap:
        create: false
        name: draft-router-nginx-conf
      extraEnv:
        - name: GOMAXPROCS
          value: "4"  # Keep this similar to the CPU limit (in whole cores).
        - name: ROUTER_PUBADDR
          value: ":3000"
        - name: ROUTER_APIADDR
          value: ":9394"
        - name: ROUTER_MONGO_URL  # Hostnames should match those shown in MongoDB rs.status().
          value: *router_mongo_hosts
        - name: ROUTER_MONGO_DB
          value: draft_router
        - name: BACKEND_URL_collections
          value: "http://draft-collections"
        - name: BACKEND_URL_content-store
          value: "http://draft-content-store"
        - name: BACKEND_URL_email-alert-frontend
          value: "http://draft-email-alert-frontend"
        - name: BACKEND_URL_finder-frontend
          value: "http://draft-finder-frontend"
        - name: BACKEND_URL_frontend
          value: "http://draft-frontend"
        - name: BACKEND_URL_government-frontend
          value: "http://draft-government-frontend"
        - name: BACKEND_URL_smartanswers
          value: "http://draft-smartanswers"
        - name: BACKEND_URL_static
          value: "http://draft-static"
        - name: BACKEND_URL_account-api
          value: "http://account-api"
        - name: BACKEND_URL_feedback
          value: "http://draft-feedback"
        - name: BACKEND_URL_licensify
          value: "http://licensify-frontend.licensify"
        - name: BACKEND_URL_search-api
          value: "http://search-api"

  - name: router-mongo
    chartPath: charts/router-mongo
    postSyncWorkflowEnabled: "false"

  - name: search-admin
    helmValues:
      dbMigrationEnabled: true
      workerEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "170"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "search-admin.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: search-admin.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-search-admin
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-search-admin
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-search-admin-publishing-api
              key: bearer_token
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: search-admin-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: search-admin-mysql
              key: DATABASE_URL

  - name: search-api
    helmValues:
      rails:
        enabled: false
      nginxClientMaxBodySize: 20M
      uploadAssets:
        enabled: false
      workerEnabled: true
      cronTasks:
        - name: generate-sitemap
          task: "sitemap:generate_and_upload"
          schedule: "50 2 * * *"
        - name: load-page-traffic
          command: "./bin/load_page_traffic.sh"
          schedule: "32 4 * * *"
          env:
            - name: AWS_SEARCH_ANALYTICS_BUCKET
              value: govuk-search-analytics-staging
        - name: update-detailed-index-popularity
          task: "search:update_popularity"
          schedule: "42 4 * * *"
          env:
            - name: SEARCH_INDEX
              value: detailed
            - name: PROCESS_ALL_DATA
              value: "true"
        - name: update-government-index-popularity
          task: "search:update_popularity"
          schedule: "12 5 * * *"
          env:
            - name: SEARCH_INDEX
              value: government
            - name: PROCESS_ALL_DATA
              value: "true"
        - name: update-govuk-index-popularity
          task: "search:update_popularity"
          schedule: "42 5 * * *"
          env:
            - name: SEARCH_INDEX
              value: govuk
      workers:
        - command: ["sidekiq", "-C", "config/sidekiq.yml"]
          name: worker
        - command: ['rake', 'message_queue:listen_to_publishing_queue']
          name: publishing-queue-listener
        - command: ['rake', 'message_queue:insert_data_into_govuk']
          name: govuk-index-queue-listener
        - command: ['rake', 'message_queue:bulk_insert_data_into_govuk']
          name: bulk-reindex-queue-listener
      extraEnv:
        - name: AWS_S3_RELEVANCY_BUCKET_NAME
          value: govuk-staging-search-relevancy
        - name: AWS_S3_SITEMAPS_BUCKET_NAME
          value: govuk-staging-sitemaps
        - name: ELASTICSEARCH_URI
          value:
            https://vpc-blue-elasticsearch6-domain-uibh77cu2kiudtl76uhseobfzq.eu-west-1.es.amazonaws.com
        - name: LOG_LEVEL
          value: warn
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-search-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-search-api
              key: oauth_secret
        - name: GOOGLE_ANALYTICS_GOVUK_VIEW_ID
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: govuk-view-id
        - name: GOOGLE_ACCOUNT_TYPE
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: account-type
        - name: GOOGLE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: client-email
        - name: GOOGLE_EXPORT_ACCOUNT_ID
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: export-account-id
        - name: GOOGLE_EXPORT_CUSTOM_DATA_SOURCE_ID
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: export-custom-data-source-id
        - name: GOOGLE_EXPORT_WEB_PROPERTY_ID
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: export-web-property-id
        - name: GOOGLE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: search-api-google-analytics
              key: private-key
        - name: GOOGLE_BIGQUERY_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: search-api-google-bigquery
              key: credentials
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-search-api-publishing-api
              key: bearer_token
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: search-api-rabbitmq
              key: RABBITMQ_URL
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: TENSORFLOW_SAGEMAKER_ENDPOINT
          value: govuk-staging-search-ltr-endpoint

  - name: search-api-v2
    helmValues:
      dbMigrationEnabled: false
      uploadAssets:
        enabled: false
      workerEnabled: true
      workerReplicaCount: 3
      workers:
        - command: ['bin/rake', 'document_sync_worker:run']
          name: document-sync-worker
      cronTasks:
        - name: quality-monitoring-assert-invariants
          task: "quality_monitoring:assert_invariants"
          schedule: "09 9 * * *"  # 09:09am daily
          suspend: true  # Too noisy for staging to run on schedule, but can be run manually.
      extraEnv:
        # TODO: remove GOVUK_PROMETHEUS_EXPORTER once govuk_app_config >=9.10 is everywhere.
        - name: GOVUK_PROMETHEUS_EXPORTER
          value: force
        - name: PUBLISHED_DOCUMENTS_MESSAGE_QUEUE_NAME
          value: search_api_v2_published_documents
        - name: PUBLISHED_DOCUMENTS_MESSAGE_QUEUE_THREADS
          value: "30"
        - name: PUBLISHED_DOCUMENTS_MESSAGE_QUEUE_MAX_UNACKED
          value: "30"
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: search-api-v2-rabbitmq
              key: RABBITMQ_URL
        - name: GOOGLE_CLOUD_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: search-api-v2-google-cloud-discovery-engine-configuration
              key: GOOGLE_CLOUD_CREDENTIALS
        - name: DISCOVERY_ENGINE_DATASTORE
          valueFrom:
            secretKeyRef:
              name: search-api-v2-google-cloud-discovery-engine-configuration
              key: DISCOVERY_ENGINE_DATASTORE
        - name: DISCOVERY_ENGINE_DATASTORE_BRANCH
          valueFrom:
            secretKeyRef:
              name: search-api-v2-google-cloud-discovery-engine-configuration
              key: DISCOVERY_ENGINE_DATASTORE_BRANCH
        - name: DISCOVERY_ENGINE_SERVING_CONFIG
          valueFrom:
            secretKeyRef:
              name: search-api-v2-google-cloud-discovery-engine-configuration
              key: DISCOVERY_ENGINE_SERVING_CONFIG

  - name: search-index-env-sync
    # See ../charts/search-index-env-sync/values.yaml for job configuration.
    chartPath: charts/search-index-env-sync
    postSyncWorkflowEnabled: "false"

  - name: search-v2-evaluator
    helmValues:
      dbMigrationEnabled: false
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "175"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "try-new-search-engine.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: try-new-search-engine.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: BASIC_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: basic-auth
              key: password
        - name: BASIC_AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: basic-auth
              key: username
        - name: GOOGLE_CLOUD_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: search-v2-evaluator-google-cloud-bigquery-configuration
              key: GOOGLE_CLOUD_CREDENTIALS
        - name: BIGQUERY_PROJECT
          valueFrom:
            secretKeyRef:
              name: search-v2-evaluator-google-cloud-bigquery-configuration
              key: BIGQUERY_PROJECT
        - name: BIGQUERY_DATASET
          valueFrom:
            secretKeyRef:
              name: search-v2-evaluator-google-cloud-bigquery-configuration
              key: BIGQUERY_DATASET
        - name: BIGQUERY_TABLE
          valueFrom:
            secretKeyRef:
              name: search-v2-evaluator-google-cloud-bigquery-configuration
              key: BIGQUERY_TABLE

  - name: service-manual-publisher
    helmValues:
      dbMigrationEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "180"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "service-manual-publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: service-manual-publisher.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-service-manual-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-service-manual-publisher
              key: oauth_secret
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-service-manual-publisher-asset-manager
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-service-manual-publisher-publishing-api
              key: bearer_token
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: service-manual-publisher-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: service-manual-publisher-postgres
              key: DATABASE_URL
        - name: HTTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: basic-auth
              key: username
        - name: HTTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: basic-auth
              key: password

  - name: signon
    helmValues:
      dbMigrationEnabled: true
      workerEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-defaults, *alb-ingress-waf-ruleset-backend]
          # TODO: remove certificate-arn annotation once ambiguous certs are
          # removed from Cert Manager.
          alb.ingress.kubernetes.io/certificate-arn:
            arn:aws:acm:eu-west-1:696911096973:certificate/ea990af0-b7b7-4ce0-8145-56d639d54cde
          external-dns.alpha.kubernetes.io/hostname: signon.{{ .Values.k8sExternalDomainSuffix }}
        hosts:
          - name: signon.{{ .Values.publishingDomainSuffix }}
      cronTasks:
        - name: delete-expired-oauth-grants
          task: "oauth_access_grants:delete_expired"
          schedule: "53 12 * * 0"
          serviceAccount: signon
        - name: delete-logs-older-than-two-years
          task: "event_log:delete_logs_older_than_two_years"
          schedule: "18 1 * * *"
          serviceAccount: signon
        - name: sync-app-secrets-to-k8s
          task: "kubernetes:sync_app_secrets"
          schedule: "11 1 * * *"
          serviceAccount: signon
        - name: sync-token-secrets-to-k8s
          task: "kubernetes:sync_token_secrets"
          schedule: "12 1 * * *"
          serviceAccount: signon
      extraEnv:
        - name: GOVUK_CSP_REPORT_ONLY
          value: "true"
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: signon-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: INSTANCE_NAME
          value: staging
        - name: ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY
          valueFrom:
            secretKeyRef:
              name: active-record-encryption
              key: ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY
        - name: ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT
          valueFrom:
            secretKeyRef:
              name: active-record-encryption
              key: ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: signon-mysql
              key: DATABASE_URL
        - name: DEVISE_PEPPER
          valueFrom:
            secretKeyRef:
              name: signon-devise-pepper
              key: DEVISE_PEPPER
        - name: DEVISE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: signon-devise-secret
              key: DEVISE_SECRET_KEY
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: SIGNON_APPS_URI_SUB_PATTERN
          value: publishing.service.gov.uk
        - name: SIGNON_APPS_URI_SUB_REPLACEMENT
          value: staging.publishing.service.gov.uk

  - name: smartanswers
    repoName: smart-answers
    helmValues:
      uploadAssets:
        # https://github.com/alphagov/smart-answers/blob/9b65057/config/application.rb#L50
        path: /app/public/assets/smartanswers
        s3Directory: "smartanswers"
      extraEnv:
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-smart-answers-link-checker-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-smart-answers-publishing-api
              key: bearer_token

  - name: smokey
    chartPath: charts/smokey

  - name: static
    helmValues:
      uploadStaticErrorPagesEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-defaults, *alb-ingress-waf-ruleset-www]
          alb.ingress.kubernetes.io/load-balancer-name: assets-origin
          alb.ingress.kubernetes.io/group.name: assets-origin
          alb.ingress.kubernetes.io/group.order: "30"
          alb.ingress.kubernetes.io/security-groups: eks_ingress_www_origin
          alb.ingress.kubernetes.io/load-balancer-attributes: *assets-lb-attributes
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: *assets-lb-conditions
        hosts:
          - name: assets-origin.{{ .Values.k8sExternalDomainSuffix }}
            path: /
      extraEnv:
        # These GA/GTM values are not secrets (not even the the gtm_auth one).
        # https://github.com/alphagov/govuk-puppet/pull/8041
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        - name: GA_UNIVERSAL_ID
          value: &ga-universal-id UA-26179049-20
        - name: GOOGLE_TAG_MANAGER_ID
          value: &static-gtm-id GTM-MG7HG5W
        - name: GOOGLE_TAG_MANAGER_AUTH  # Non-prod only.
          value: &static-gtm-auth oJWs562CxSIjZKn_GlB5Bw
        - name: GOOGLE_TAG_MANAGER_PREVIEW  # Non-prod only.
          value: &static-gtm-preview env-5
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-static-publishing-api
              key: bearer_token
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: USE_TMPDIR_PAGE_CACHE
          value: "true"
      nginxConfigMap:
        extraServerConf: |
          # 1stline use this URL in their zendesk template
          location = /static/gov.uk_logotype_crown.png {
            absolute_redirect off;
            return 301 /media/5c810ef4ed915d43e50ce260/gov.uk_logotype_crown.png;
          }
          # Google site verification
          location = /googlec908b3bc32386239.html {
            return 200 'google-site-verification: googlec908b3bc32386239.html';
          }

  - name: draft-static
    repoName: static
    helmValues:
      rails:
        createKeyBaseSecret: false
      sentry:
        createSecret: false
      uploadAssets:
        enabled: false
      extraEnv:
        - name: DRAFT_ENVIRONMENT
          value: "1"
        - name: PLEK_HOSTNAME_PREFIX
          value: draft-
        - name: GA_UNIVERSAL_ID
          value: *ga-universal-id
        - name: GOOGLE_TAG_MANAGER_ID
          value: *static-gtm-id
        - name: GOOGLE_TAG_MANAGER_AUTH  # Non-prod only.
          value: *static-gtm-auth
        - name: GOOGLE_TAG_MANAGER_PREVIEW  # Non-prod only.
          value: *static-gtm-preview
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-static-publishing-api
              key: bearer_token
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: USE_TMPDIR_PAGE_CACHE
          value: "true"

  - name: short-url-manager
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "190"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "short-url-manager.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: short-url-manager.{{ .Values.k8sExternalDomainSuffix }}
      cronTasks:
        - name: organisations-import
          task: "organisations:import"
          schedule: "0 4 * * *"
      redis:
        enabled: true
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-short-url-manager
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-short-url-manager
              key: oauth_secret
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: short-url-manager-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: INSTANCE_NAME
          value: staging
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: short-url-manager-docdb
              key: MONGODB_URI
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-short-url-manager-publishing-api
              key: bearer_token

  - name: specialist-publisher
    helmValues:
      nginxClientMaxBodySize: *max-upload-size
      nginxProxyReadTimeout: 30s
      workerEnabled: true
      redis:
        enabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "200"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "specialist-publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: specialist-publisher.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-specialist-publisher-asset-manager
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-specialist-publisher-email-alert-api
              key: bearer_token
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-specialist-publisher-publishing-api
              key: bearer_token
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-specialist-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-specialist-publisher
              key: oauth_secret
        - name: AWS_S3_BUCKET_NAME
          value: govuk-staging-specialist-publisher-csvs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: specialist-publisher-docdb
              key: MONGODB_URI
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: support-api-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template

  - name: support
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "210"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "support.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: support.{{ .Values.k8sExternalDomainSuffix }}
      uploadAssets:
        path: /app/public/assets/support
      workerEnabled: true
      extraEnv:
        - name: AWS_S3_BUCKET_NAME
          value: govuk-staging-support-api-csvs
        - name: EMERGENCY_CONTACT_DETAILS
          valueFrom:
            secretKeyRef:
              name: support-emergency-contacts
              key: emergency_contacts
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-support
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-support
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-support-publishing-api
              key: bearer_token
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: SUPPORT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-support-support-api
              key: bearer_token
        - name: ZENDESK_CLIENT_USERNAME
          valueFrom:
            secretKeyRef:
              name: support-zendesk
              key: username
        - name: ZENDESK_CLIENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: support-zendesk
              key: password
        - name: ZENDESK_ANONYMOUS_TICKET_EMAIL
          valueFrom:
            secretKeyRef:
              name: support-zendesk
              key: ticket_email

  - name: support-api
    helmValues:
      dbMigrationEnabled: true
      uploadAssets:
        enabled: false
      workerEnabled: true
      redis:
        enabled: true
      cronTasks:
        - name: feedback-deduplication-nightly
          task: "anonymous_feedback_deduplication:nightly"
          schedule: "10 0 * * *"
        - name: import-organisations
          task: "api_sync:import_organisations"
          schedule: "20 0 * * *"
        - name: service-feedback-aggregation
          task: "service_feedback_aggregation:daily"
          schedule: "30 0 * * *"
        - name: feedback-deduplication-recent
          task: "anonymous_feedback_deduplication:recent"
          schedule: "*/5 * * * *"
      extraEnv:
        - name: AWS_S3_BUCKET_NAME
          value: govuk-staging-support-api-csvs
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: support-api-postgres
              key: DATABASE_URL
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-support-api
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-support-api
              key: oauth_secret
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: support-api-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: ZENDESK_CLIENT_USERNAME
          valueFrom:
            secretKeyRef:
              name: support-zendesk
              key: username
        - name: ZENDESK_CLIENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: support-zendesk
              key: password
        - name: ZENDESK_ANONYMOUS_TICKET_EMAIL
          valueFrom:
            secretKeyRef:
              name: support-zendesk
              key: ticket_email

  - name: transition
    helmValues:
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "220"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "transition.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: transition.{{ .Values.k8sExternalDomainSuffix }}
      dbMigrationEnabled: true
      workerEnabled: true
      cronTasks:
        - name: import-all-organisations
          task: "import:all:organisations"
          schedule: "00 09-19 * * 1-5"
        - name: import-dns
          task: "import:dns_details"
          schedule: "24 07-19 * * 1-5"
        - name: import-hits-from-cdn-logs
          task: "import:all:hits[govuk-staging-transition-fastly-logs]"
          schedule: "9 3 * * *"
        - name: clear-expired-sessions
          task: "clear_expired_sessions"
          schedule: "18 3 * * *"
        - name: clear-old-mappings
          task: "clear_old_mappings_batches"
          schedule: "8 3 * * *"
        - name: refresh-materialized-hits
          task: "import:hits:refresh_materialized"
          schedule: "4 0,12 * * *"
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-transition
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-transition
              key: oauth_secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: transition-postgres
              key: DATABASE_URL
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: travel-advice-publisher
    helmValues:
      cronTasks:
        - name: publish-scheduled-editions
          task: "publish_scheduled_editions"
          schedule: "29 5 * * *"
      nginxClientMaxBodySize: *max-upload-size
      workerEnabled: true
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "230"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "travel-advice-publisher.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: travel-advice-publisher.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-travel-advice-publisher-asset-manager
              key: bearer_token
        - name: EMAIL_ALERT_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-travel-advice-publisher-email-alert-api
              key: bearer_token
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-travel-advice-publisher
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-travel-advice-publisher
              key: oauth_secret
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-travel-advice-publisher-publishing-api
              key: bearer_token
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-travel-advice-publisher-link-checker-api
              key: bearer_token
        - name: LINK_CHECKER_API_SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              name: travel-advice-publisher-link-checker-api-callback-token
              key: LINK_CHECKER_API_SECRET_TOKEN
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: travel-advice-publisher-docdb
              key: MONGODB_URI
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital

  - name: whitehall-admin
    repoName: whitehall
    helmValues:
      appResources:
        limits:
          memory: 4Gi
          cpu: "2"
        requests:
          memory: 2Gi
          cpu: "1"
      securityContext:
        # Use the same uid/gid for NFS permissions as the old stack, so that
        # files uploaded by whitehall-admin on k8s can be processed by
        # whitehall-admin on EC2 and vice versa. 2899 is the "deploy" user.
        runAsUser: 2899
        runAsGroup: 2899
      cronTasks:
        - name: index-consultations
          task: "search:index:consultations"
          schedule: "0 2-22 * * *"
        - name: send-notifications
          task: "publisher_notifications:send"
          schedule: "14 1 * * *"
        - name: send-review-reminders
          task: "send_review_reminders"
          schedule: "30 10 * * *"
        - name: taxonomy-rebuild
          task: "taxonomy:rebuild_cache"
          schedule: "*/10 7-20 * * *"
      dbMigrationEnabled: true
      workerEnabled: true
      nginxClientMaxBodySize: *max-upload-size
      nginxDenyCrawlers: true
      nginxProxyReadTimeout: 60s
      ingress:
        enabled: true
        annotations:
          <<: [*alb-ingress-group-backend, *alb-ingress-defaults]
          alb.ingress.kubernetes.io/group.order: "240"
          alb.ingress.kubernetes.io/conditions.{{ .Release.Name }}: >
            [{"field": "host-header", "hostHeaderConfig": { "values": [
                "whitehall-admin.{{ .Values.publishingDomainSuffix }}"
            ]}}]
        hosts:
          - name: whitehall-admin.{{ .Values.k8sExternalDomainSuffix }}
      extraEnv:
        - name: GDS_SSO_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: signon-app-whitehall
              key: oauth_id
        - name: GDS_SSO_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: signon-app-whitehall
              key: oauth_secret
        - name: GOVUK_UPLOADS_ROOT
          value: &whitehall-uploads-path /uploads
        - name: ASSET_MANAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-whitehall-asset-manager
              key: bearer_token
        - name: GOVUK_NOTIFY_API_KEY
          valueFrom:
            secretKeyRef:
              name: whitehall-notify
              key: GOVUK_NOTIFY_API_KEY
        - name: JWT_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: authenticating-proxy-jwt-auth-secret
              key: JWT_AUTH_SECRET
        - name: LINK_CHECKER_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-whitehall-link-checker-api
              key: bearer_token
        - name: LINK_CHECKER_API_SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              name: whitehall-link-checker-api-callback-token
              key: LINK_CHECKER_API_SECRET_TOKEN
        - name: PUBLISHING_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-whitehall-publishing-api
              key: bearer_token
        - name: RUMMAGER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: signon-token-whitehall-search-api
              key: bearer_token
        - name: AWS_S3_BUCKET_NAME
          value: govuk-staging-whitehall-csvs
        - name: GOVUK_NOTIFY_TEMPLATE_ID
          value: *publishing-notify-template
        - name: EMAIL_ADDRESS_OVERRIDE  # TODO: remove in production.
          value: whitehall-emails-staging@digital.cabinet-office.gov.uk
        - name: MEMCACHE_SERVERS
          value: frontend-memcached-govuk.eks.staging.govuk-internal.digital
        - name: REDIS_URL
          value: redis://shared-redis-govuk.eks.staging.govuk-internal.digital
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: whitehall-admin-mysql
              key: DATABASE_URL
      extraVolumes:
        - name: asset-uploads-efs
          nfs:
            server: *assets-nfs
            path: /whitehall  # TODO: does this work on an new/empty EFS instance?
      appExtraVolumeMounts:
        - name: asset-uploads-efs
          mountPath: *whitehall-uploads-path
