apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: alertmanagerconfig-general
spec:
  route:
    receiver: 'null'
    groupWait: 30s
    groupInterval: 5m
    repeatInterval: 4h
    groupBy: [alertname, namespace]
    routes:
    - matchers:
        - name: severity
          value: page
          matchType: =
      receiver: 'pagerduty'
    - matchers:
        - name: alertname
          value: SignonApiUserTokenExpirySoon
          matchType: =
        - name: environment
          value: integration|production
          matchType: =~
      receiver: 'slack-signon-token-expiry'
      repeatInterval: 1d
      groupWait: 12h
      groupInterval: 12h
      activeTimeIntervals:
        - inhours
    - matchers:
        - name: alertname
          value: MirrorFreshnessAlert
          matchType: =
      receiver: 'slack-mirror-freshness'
      repeatInterval: 1d
      groupWait: 12h
      groupInterval: 12h
      activeTimeIntervals:
        - inhours
    - matchers:
      - name: destination
        value: slack-platform-engineering
        matchType: =
      receiver: 'generic-slack-platform-engineering'
      repeatInterval: 1d
      groupWait: 12h
      groupInterval: 12h
      activeTimeIntervals:
        - inhours
    - receiver: search-slack-warning
      groupBy:
        - destination
      groupWait: 1m
      groupInterval: 10m
      repeatInterval: 1h
      matchers:
        - name: destination
          value: search-alerts
      routes:
        - matchers:
            - name: severity
              value: critical|page
              matchType: =~
          continue: true
          groupWait: 1m
          groupInterval: 15m
          repeatInterval: 24h
          receiver: search-slack-critical
  receivers:
  - name: 'null'
  - name: 'pagerduty'
    pagerdutyConfigs:
    - routingKey:
        name: alertmanager-receivers
        key: pagerduty_routing_key
      clientURL: "https://alertmanager.{{ .Values.k8sExternalDomainSuffix }}/#/alerts?receiver={{ "{{ .Receiver | urlquery }}" }}"
      description: |-
        {{ "[{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}: {{ .CommonAnnotations.description }}" }}
  - name: 'slack-signon-token-expiry'
    slackConfigs:
    - channel: '#govuk-2ndline-tech'
      sendResolved: true
      iconURL: https://avatars3.githubusercontent.com/u/3380462
      title: |-
        {{ "[{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}" }}
      text: >-
        *Description:* {{ "{{ .CommonAnnotations.description }}" }}

        *Environment:* {{ .Values.govukEnvironment }}

        *Runbook:* {{ "{{ .CommonAnnotations.runbook_url }}" }}

        *Expiring tokens:*

        {{ "{{ range .Alerts -}}" }}
          • api_user: {{ "`{{ .Labels.api_user }}`, application: `{{ .Labels.application }}`" }}
        {{ "{{ end }}" }}
      apiURL: &slack_api_url
        name: alertmanager-receivers
        key: slack_api_url
  - name: 'slack-mirror-freshness'
    slackConfigs:
    - channel: '#govuk-platform-engineering'
      sendResolved: true
      iconURL: https://avatars3.githubusercontent.com/u/3380462
      title: |-
        {{ "[{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}" }}
      text: >-
        *Description:* {{ "{{ .CommonAnnotations.description }}" }}

        *Environment:* {{ .Values.govukEnvironment }}

        *Mirrors*:
        {{ "{{ range .Alerts -}}" }}
          • backend: {{ "`{{ .Labels.backend }}`" }}
        {{ "{{ end }}" }}
      apiURL: *slack_api_url
  - name: 'generic-slack-platform-engineering'
    slackConfigs:
    - channel: '#govuk-platform-engineering'
      sendResolved: true
      iconURL: https://avatars3.githubusercontent.com/u/3380462
      text: |-
        {{ "[{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}: {{ .CommonAnnotations.description }}" }}
      apiURL: *slack_api_url
  - name: search-slack-warning
    slackConfigs:
    - &search-slack-config
      channel: '#govuk-search-improvement-alerts'
      username: Search health alerts
      iconEmoji: '{{ "{{ if eq .Status \"firing\" }}:warning:{{ else }}:large_green_circle:{{ end }}" }}'
      color: '{{ "{{ if eq .Status \"firing\" }}#ffdd00{{ else }}#00703c{{ end }}" }}'
      title: >-
        {{ "{{ if eq .Status \"firing\" }}" }}
          {{ "{{ len .Alerts.Firing }} search health warning(s) ongoing" }}
        {{ "{{ else }}" }}
          All search health warnings resolved
        {{ "{{ end }}" }}
      text: >-
        {{ "{{- if eq .Status \"firing\" -}}" }}
          {{ "{{- range .Alerts.Firing -}}" }}
            • *{{ "{{ .Annotations.summary }}" }}* ({{ "{{ .Annotations.description }}" }}){{ "{{- \"\\n\" -}}" }}
          {{ "{{- end -}}" }}
        {{ "{{- else -}}" }}
          All search health warnings have now been resolved :raised_hands:
        {{ "{{- end -}}" }}
      actions:
        - type: button
          text: ':grafana: Service dashboard'
          url: >-
            https://grafana.eks.production.govuk.digital/d/e4f052f5-e292-42d2-9ca9-32c53bd7ee6d/christian-sutterat-search-api-v2?orgId=1&refresh=1m&from=now-24h&to=now
        - type: button
          text: ':elasticsearch: Invariant check logs'
          url: >-
            https://kibana.logit.io/s/13d1a0b1-f54f-407b-a4e5-f53ba653fac3/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-24h,to:now))&_a=(columns:!(message),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'filebeat-*',key:kubernetes.labels.app_kubernetes_io%2Fname,negate:!f,params:(query:search-api-v2-quality-monitoring-assert-invariants),type:phrase),query:(match_phrase:(kubernetes.labels.app_kubernetes_io%2Fname:search-api-v2-quality-monitoring-assert-invariants)))),sort:!())
        - type: button
          text: ':book: Documentation'
          url: https://docs.publishing.service.gov.uk/repos/search-api-v2.html
      sendResolved: true
      apiURL:
        key: slack_api_url
        name: alertmanager-receivers
  - name: search-slack-critical
    slackConfigs:
    - <<: *search-slack-config
      channel: '#govuk-search-improvement'
      iconEmoji: '{{ "{{ if eq .Status \"firing\" }}:sos:{{ else }}:large_green_circle:{{ end }}" }}'
      color: '{{ "{{ if eq .Status \"firing\" }}#d4351c{{ else }}#00703c{{ end }}" }}'
      title: >-
        {{ "{{ if eq .Status \"firing\" }}" }}
          {{ "{{ len .Alerts.Firing }} critical search health issue(s) ongoing" }}
        {{ "{{ else }}" }}
          Critical search health issues resolved
        {{ "{{ end }}" }}
      text: >-
        {{ "{{- if eq .Status \"firing\" -}}" }}
          {{ "{{- range .Alerts.Firing -}}" }}
            • *{{ "{{ .Annotations.summary }}" }}* ({{ "{{ .Annotations.description }}" }}){{ "{{- \"\\n\" -}}" }}
          {{ "{{- end -}}" }}
        {{ "{{- else -}}" }}
          All critical search health issues have now been resolved. :raised_hands:
        {{ "{{- end -}}" }}
  muteTimeIntervals:
  - name: inhours
    timeIntervals:
    - weekdays: ['monday:friday']
  - name: pagerduty_drill
    timeIntervals:
    - weekdays: ['wednesday']
      times:
      - startTime: 10:00
        endTime: 10:03
