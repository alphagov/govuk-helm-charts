rule_files:
  - startup_probe_failure.yaml

evaluation_interval: 1m

tests:
  - name: StartupProbeFailure - No alert with 29 failures
    interval: 1m
    input_series:
      - series: >-
          prober_probe_total{
          probe_type="Startup",
          result="failed",
          pod="draft-static-6556f687fd-94glb",
          container="app",
          namespace="apps"
          }
        values: '0 10 20 23 29 29'
    alert_rule_test:
      - alertname: StartupProbeFailure
        eval_time: 5m
        exp_alerts: []

  - name: StartupProbeFailure - Alert with 30 failures correctly in apps namespace
    interval: 1m
    input_series:
      - series: >-
          prober_probe_total{
          probe_type="Startup",
          result="failed",
          pod="draft-static-6556f687fd-94glb",
          container="app",
          namespace="apps"
          }
        values: '0+10x10'
    alert_rule_test:
      - alertname: StartupProbeFailure
        eval_time: 5m
        exp_alerts:
          - exp_labels:
              alertname: StartupProbeFailure
              severity: warning
              destination: slack-startup-probe-failures
              probe_type: Startup
              result: failed
              pod: draft-static-6556f687fd-94glb
              container: app
              namespace: apps
              app_name: draft-static
            exp_annotations:
              summary: draft-static is failing to start up
              description: >-
                The app container in the draft-static app is failing to start up, the configured
                kubernetes startupProbe is failing (either timing out, failing to connect, or
                returning an HTTP response code >= 400.

                To find the exact reason you can run `kubectl -n apps describe pod draft-static-6556f687fd-94glb`

  - name: StartupProbeFailure - Alert with 30 failures correctly in licensify namespace
    interval: 1m
    input_series:
      - series: >-
          prober_probe_total{
          probe_type="Startup",
          result="failed",
          pod="licensify-frontend-6556f687fd-94glb",
          container="main",
          namespace="licensify"
          }
        values: '0+10x10'
    alert_rule_test:
      - alertname: StartupProbeFailure
        eval_time: 5m
        exp_alerts:
          - exp_labels:
              alertname: StartupProbeFailure
              severity: warning
              destination: slack-startup-probe-failures
              probe_type: Startup
              result: failed
              pod: licensify-frontend-6556f687fd-94glb
              container: main
              namespace: licensify
              app_name: licensify-frontend
            exp_annotations:
              summary: licensify-frontend is failing to start up
              description: >-
                The main container in the licensify-frontend app is failing to start up, the configured
                kubernetes startupProbe is failing (either timing out, failing to connect, or
                returning an HTTP response code >= 400.

                To find the exact reason you can run `kubectl -n licensify describe pod licensify-frontend-6556f687fd-94glb`

  - name: StartupProbeFailure - No alert for increases which occurred in the past, but are no longer occuring
    interval: 1m
    input_series:
      - series: >-
          prober_probe_total{
          probe_type="Startup",
          result="failed",
          pod="draft-static-6556f687fd-94glb",
          container="app",
          namespace="apps"
          }
        values: '0+10x5 50+0x100'
    alert_rule_test:
      - alertname: StartupProbeFailure
        eval_time: 30m
        exp_alerts: []
