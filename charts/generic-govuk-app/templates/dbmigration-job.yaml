{{- if .Values.dbMigrationEnabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-dbmigrate
  labels:
    {{- include "generic-govuk-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: dbmigrate
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  activeDeadlineSeconds: 900
  backoffLimit: 2
  template:
    metadata:
      name: {{ .Release.Name }}-dbmigrate
      labels:
        {{- include "generic-govuk-app.labels" . | nindent 8 }}
        app.kubernetes.io/component: dbmigrate
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        fsGroup: {{ .Values.securityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
      restartPolicy: Never
      volumes:
        - name: app-tmp
          emptyDir: {}
        {{- with .Values.extraVolumes }}
          {{- . | toYaml | trim | nindent 8 }}
        {{- end }}
      containers:
        - name: dbmigrate
          image: "{{ .Values.appImage.repository }}:{{ .Values.appImage.tag }}"
          command: ["rails"]
          args: ["db:prepare"]
          envFrom:
            - configMapRef:
                name: govuk-apps-env
          env:
            - name: SENTRY_RELEASE
              value: "{{ .Values.appImage.tag }}"
            {{- with .Values.extraEnv }}
              {{- (tpl (toYaml .) $) | trim | nindent 12 }}
            {{- end }}
          {{- with .Values.appResources }}
          resources:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: app-tmp
              mountPath: /tmp
            {{- with .Values.appExtraVolumeMounts }}
              {{- . | toYaml | trim | nindent 12 }}
            {{- end }}
{{- end }}
