{{- if .Values.uploadAssets.enabled -}}
{{- $destDir := .Values.uploadAssets.s3Directory | default .Release.Name }}
{{- $sourcePath := .Values.uploadAssets.path | default (printf "/app/public/assets/%s" .Release.Name) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-upload-assets
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  template:
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
      initContainers:
      - name: {{ .Release.Name }}-copy-assets-for-upload
        image: "{{ .Values.appImage.repository }}:{{ required "Valid .Values.appImage.tag required!" .Values.appImage.tag }}"
        command:
        - sh
        - -c
        - "cp -R {{ $sourcePath }}/* /assets-to-upload"
        volumeMounts: &volumeMounts
        - name: assets-to-upload
          mountPath: /assets-to-upload
        securityContext:
          allowPrivilegeEscalation: false
      containers:
      - name: {{ .Release.Name }}-upload-assets
        image: 172025368201.dkr.ecr.eu-west-1.amazonaws.com/github-cli:latest
        command:
        - aws
        - s3
        - sync
        - /assets-to-upload
        - "{{- printf "s3://govuk-app-assets-%s/assets/%s/" .Values.govukEnvironment $destDir }}"
        {{- with .Values.jobResources }}
        resources:
          {{- . | toYaml | trim | nindent 12 }}
        {{- end }}
        volumeMounts: *volumeMounts
      restartPolicy: Never
      volumes:
      - name: assets-to-upload
        emptyDir: {}
{{- end }}
