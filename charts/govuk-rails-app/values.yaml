# Default/example values for a Rails application.

service:
  type: NodePort
  annotations: {}
  port: 80

ingress:
  enabled: false
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck/ready
  hosts:
  - name:
    path: /
    pathType: Prefix

replicaCount: 1

# workerEnabled should be true if the app uses Sidekiq, false otherwise.
workerEnabled: false
workerReplicaCount: 1

# dbMigrationEnabled controls whether Rails database migrations are run on install/upgrade.
dbMigrationEnabled: false

appImage:
  repository: ""  # Dummy value, overridden in ArgoCD config.
  tag: latest
  appPort: 3000

# appProbes defines liveness/readiness/startup probes for the app container.
# These default should suffice for most GOV.UK Rails apps.
appProbes:
  startupProbe: &app-probe  # TODO: check the Rails apps aren't picky about the Host header.
    httpGet:
      path: /healthcheck/live
      port: http
    failureThreshold: 10
    periodSeconds: 3
    timeoutSeconds: 5
  livenessProbe:
    <<: *app-probe
    failureThreshold: 3
    periodSeconds: 5
  readinessProbe:
    <<: *app-probe
    httpGet:
      path: /healthcheck/ready
      port: http
    failureThreshold: 2
    periodSeconds: 5

nginxImage:
  repository: nginx
  pullPolicy: Always
  tag: stable
  nginxPort: 8080

appResources: {}
#   limits:
#     cpu: 500m
#     memory: 512Mi
#   requests:
#     cpu: 500m
#     memory: 512Mi

workerResources: {}
#   limits:
#     cpu: 500m
#     memory: 512Mi
#   requests:
#     cpu: 500m
#     memory: 512Mi

# extraEnv:
#  - name: RETICULATE_SPLINES
#    value: "true"
