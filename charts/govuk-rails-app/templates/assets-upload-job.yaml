{{- if .Values.uploadAssets.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-upload-assets
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 2  # Retry once, in case of network error.
  template:
    spec:
      containers:
      - name: {{ .Release.Name }}-upload-assets
        image: "{{ required "Valid .Values.appImage.repository required!" .Values.appImage.repository }}:{{ required "Valid .Values.appImage.tag required!" .Values.appImage.tag }}"
        # TODO: remove this horrible hack of installing awscli inside the
        # container by building it (or a smaller equivalent) into the base
        # image. Better still: have the build process emit the assets and just
        # copy them to the serving bucket here, without involving the app image.
        command:
        - "bash"
        - "-c"
        - |
          ASSETS_PATH="{{ .Values.uploadAssets.path | default (printf "/app/public/assets/%s" .Release.Name) }}"
          [ -d "${ASSETS_PATH}" ] && \
          apt-get update && \
          apt-get install -y awscli && \
          aws s3 sync ${ASSETS_PATH} \
            s3://govuk-app-assets-{{ .Values.govukEnvironment }}/assets/{{ .Values.uploadAssets.s3Directory | default .Release.Name }}/
      restartPolicy: Never
{{- end }}
