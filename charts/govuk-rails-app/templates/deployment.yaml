apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "govuk-rails-app.labels" . | nindent 8 }}
        app: {{ .Release.Name }}
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.appImage.repository }}:{{ .Values.appImage.tag }}"
          imagePullPolicy: {{ .Values.appImage.pullPolicy | default "Always" }}
          ports:
            - name: http
              containerPort: {{ .Values.appPort }}
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
          envFrom:
          - configMapRef:
              name: govuk-apps-env
          env:
            - name: PORT
              value: "{{ .Values.appPort }}"
          {{- with .Values.extraEnv }}
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          {{- with .Values.appResources }}
          resources:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          {{- if .Values.appProbes }}
          {{- .Values.appProbes | toYaml | trim | nindent 10 }}
          {{- else }}
          startupProbe: &app-probe  # TODO: check the Rails apps aren't picky about the Host header.
            httpGet:
              path: /healthcheck/live
              port: http
            failureThreshold: 10
            periodSeconds: 3
            timeoutSeconds: 15
          livenessProbe:
            <<: *app-probe
            failureThreshold: 3
            periodSeconds: 5
          readinessProbe:
            <<: *app-probe
            httpGet:
              path: /healthcheck/live  # TODO: fix readiness check so that we can use it here.
              port: http
            failureThreshold: 2
            periodSeconds: 5
          {{- end }}
          {{- if .Values.securityContext.appContainer }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1001
            runAsGroup: 1001
          {{- end }}
        - name: {{ .Release.Name }}-nginx
          image: "{{ .Values.nginxImage.repository }}:{{ .Values.nginxImage.tag }}"
          imagePullPolicy: {{ .Values.nginxImage.pullPolicy | default "Always" }}
          ports:
            - name: http
              containerPort: {{ .Values.nginxPort }}
          livenessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 2
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 2
            failureThreshold: 2
            periodSeconds: 5
            timeoutSeconds: 15
          {{- with .Values.nginxResources }}
          resources:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: {{ .Values.nginxConfigMap.name | default (printf "%s-nginx-conf" .Release.Name) }}
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: tmp
            mountPath: /tmp
          {{- with .Values.nginxExtraVolumeMounts }}
          {{ . | toYaml | trim | nindent 10 }}
          {{- end }}
        {{- if .Values.nginxPrometheusExporter }}
        - name: nginx-prometheus-exporter
          image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1.9.2
          args: ["-config-file", "/etc/prometheus-nginxlog-exporter/config.hcl"]
          ports:
            - name: nginxMetrics
              containerPort: {{ .Values.nginxExporterPort }}
            - name: syslog
              containerPort: {{ .Values.syslogPort }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: nginxMetrics
            initialDelaySeconds: 2
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 20
          readinessProbe:
            httpGet:
              path: /metrics
              port: nginxMetrics
            initialDelaySeconds: 2
            failureThreshold: 2
            periodSeconds: 5
            timeoutSeconds: 15
          {{- with .Values.nginxPrometheusExporterResources }}
          resources:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ .Release.Name }}-nginx-prometheus-exporter-config
              mountPath: /etc/prometheus-nginxlog-exporter
          {{- end }}
      enableServiceLinks: false
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ .Values.nginxConfigMap.name | default (printf "%s-nginx-conf" .Release.Name) }}
        configMap:
          name: {{ .Values.nginxConfigMap.name | default (printf "%s-nginx-conf" .Release.Name) }}
      - name: tmp
        emptyDir: {}
      {{- if .Values.nginxPrometheusExporter }}
      - name: {{ .Release.Name }}-nginx-prometheus-exporter-config
        configMap:
          name: {{ .Release.Name }}-nginx-prometheus-exporter-conf
      {{- end }}
      {{- with .Values.nginxExtraVolumes }}
      {{ . | toYaml | trim | nindent 6 }}
      {{- end }}
