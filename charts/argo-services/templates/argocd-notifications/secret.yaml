# NOTE: This assumes that an AWS SecretsManager secret `govuk/slack-webhook-url`
# exists with key `url`.
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-notifications-secret
  labels:
    argocd.argoproj.io/secret-type: argocd-notifications-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: argocd-notifications-secret
      data:
        # Helm and External Secrets use the same template language and conflict
        slack_url: "{{
          "{{ .slackUrl | toString}}"
        }}"
        argo_events_webhook_token: "{{
          "{{ .argoEventsWebhookToken | toString}}"
        }}"
        grafana_api_key: "{{
          "{{ .grafanaApiKey | toString}}"
        }}"
  data:
    - secretKey: slackUrl
      remoteRef:
        key: govuk/slack-webhook-url
        property: url
    - secretKey: argoEventsWebhookToken
      remoteRef:
        key: govuk/argo-events-webhook-token
        property: token
    - secretKey: grafanaApiKey
      remoteRef:
        key: govuk/argo-notifications/grafana
        property: grafana-api-key
