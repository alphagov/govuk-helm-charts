{{ $app := .Values.licensifyBackend }}
{{ $_ := set .Values "appName" $app.name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $app.name }}
  labels:
    {{- include "licensify.labels" . | nindent 4}}
    app: {{ $app.name }}
    app.kubernetes.io/component: app
spec:
  replicas: {{ $app.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ $app.name }}
  template:
    metadata:
      labels:
        {{- include "licensify.labels" . | nindent 8}}
        app: {{ $app.name }}
        app.kubernetes.io/component: app
    spec:
      securityContext:
        fsGroup: {{ .Values.securityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.LicensifyBackend.repository }}:{{ .Values.images.LicensifyBackend.tag }}"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: APP_PORT
              value: "{{ $app.port }}"
            - name: SBT_MODE
              value: docker
            - name: APPLICATION_FORM_AWS_ACCESS_KEY_ID
              value: do-not-use
            - name: APPLICATION_FORM_AWS_SECRET_KEY
              value: do-not-use
            - name: GDS_CONFIG_FILE
              value: /etc/licensing/config.properties
            {{- with .Values.extraEnv }}
              {{- (tpl (toYaml .) $) | trim | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ $app.port }}
          livenessProbe: &app-probe
            httpGet:
              path: {{ $app.healthcheckPath }} 
              port: http
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 30
          readinessProbe:
            <<: *app-probe  # Intentionally same path as liveness.
            failureThreshold: 2
          startupProbe:
            <<: *app-probe
            failureThreshold: 15
            periodSeconds: 2
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: licensify-config
              mountPath: "/etc/licensing"
              readOnly: true
            - name: app-tmp
              mountPath: /tmp
      volumes:
        - name: licensify-config
          secret:
            secretName: licensify-config
        - name: app-tmp
          emptyDir: {}
