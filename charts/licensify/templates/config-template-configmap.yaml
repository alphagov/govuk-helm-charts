apiVersion: v1
kind: ConfigMap
metadata:
  name: licensify-config-template
  labels:
    {{- include "licensify.labels" . | nindent 4 }}
data:
  config.properties: |
    # Virus scan config
    clam.antivirus.host={{ .Values.config.clamAntivirusHost }}
    scheduled.virus.scan.cron.expression={{ .Values.config.scheduledVirusScanCronExpression }}

    # AWS Config
    amazon.key.access={{ `{{ .aws_access_key_id }}` }}
    amazon.key.secret={{ `{{ .aws_access_secret_key }}` }}

    # MongoDB Config
    mongo.database.hosts={{ join "," .Values.config.mongo.dbHosts }}
    mongo.database.reference.name={{ .Values.config.mongo.dbReferenceName }}
    mongo.database.audit.name={{ .Values.config.mongo.dbAuditName }}
    mongo.database.auth.enabled={{ .Values.config.mongo.dbAuthEnabled }}
    mongo.database.auth.username={{ .Values.config.mongo.dbAuthUsername }}
    mongo.database.auth.password={{ `{{ .mongo_database_auth_password }}` }}
    mongo.database.slaveok={{ .Values.config.mongo.dbSlaveOk }}

    # Elms config
    govuk.url={{ .Values.config.govukBaseUrl }}/
    uploadUrlBase={{ .Values.config.frontendBaseUrl }}/
    elms.frontend.host={{ .Values.config.frontendBaseUrl }}/
    elms.admin.host={{ .Values.config.adminBaseUrl }}/
    elms.pdf.apihost={{ .Values.config.elmsPdfApiHost }}
    elms.max.appProcessAttemptCount={{ .Values.config.elmsMaxAppProcessAttemptCount }}

    # Authorization config
    signon.url={{ .Values.config.signonBaseUrl }}
    access_token_url={{ .Values.config.signonBaseUrl }}/oauth/access_token
    authorization_url={{ .Values.config.signonBaseUrl }}/oauth/authorize
    user_details_url={{ .Values.config.signonBaseUrl }}/user.json
    oauth_callback_url_override={{ .Values.config.adminBaseUrl }}/licence-management/admin/oauth
    client_id={{ `{{ .client_id }}` }}
    client_secret={{ `{{ .client_secret }}` }}

    # Google Analytics config
    googleAnalytics.account.admin={{ .Values.config.googleAnalytics.accountAdmin }}
    googleAnalytics.domain.admin={{ .Values.config.googleAnalytics.domainAdmin }}
    googleAnalytics.account.frontend={{ .Values.config.googleAnalytics.accountFrontend }}
    googleAnalytics.domain.frontend={{ .Values.config.googleAnalytics.domainFrontend }}

    # Payment provider config
    paymentsTestMode={{ .Values.config.payments.testMode }}

    {{- if not .Values.config.payments.testMode }}
    # Unsure if these are used
    payment.bibit.formUrl={{ .Values.config.payments.bibitFormUrl }}
    payment.capita.formUrl={{ .Values.config.payments.capitaFormUrl }}
    payment.northgate.callback.override={{ .Values.config.payments.northgateCallbackOverride }}
    payment.worldpay.formUrl={{ .Values.config.payments.worldpayFormUrl }}
    {{- end }}
    worldpay.redirectUrl={{ .Values.config.frontendBaseUrl }}/apply-for-a-licence/payment/worldpayComplete
    worldpay.cancelled.redirectUrl={{ .Values.config.frontendBaseUrl }}/apply-for-a-licence/payment/worldpayCancelled

    # License Finder config
    licencefinder.url={{ .Values.config.govukBaseUrl }}/licence-finder

    # Notify config
    noReplyMailAddress={{ .Values.config.notify.noReplyMailAddress }}
    notify.key.api={{ `{{ .notify_key_api }}` }}
    notify.template.applicant.none={{ .Values.config.notify.templateApplicatNone }}
    notify.template.applicant.offline={{ .Values.config.notify.templateApplicatOffline }}
    notify.template.applicant.online={{ .Values.config.notify.templateApplicatOnline }}
    notify.template.authority={{ .Values.config.notify.templateAuthority }}
    notify.template.periodic={{ .Values.config.notify.templatePeriodic }}

    email.periodic.enabled={{ .Values.config.notify.emailPeriodicEnabled }}
    notify.periodic.email.cron={{ .Values.config.notify.periodicEmailCron }}

    {{- if .Values.config.notify.emailOverrideRecipient }}
    email.override.recipient={{ .Values.config.notify.emailOverrideRecipient }}
    {{- end }}

    # Other config
    licenceApplication.expirationPeriod={{ .Values.config.licenseApplicationExpirationPeriod }}

    # Feed config
    feedActor={{ .Values.config.feedActor }}
    is.master.node={{ .Values.config.isMasterNode }}

    {{- if .Values.config.uncollectedExpiry.enabled }}
    uncollected.expiry.enabled=true
    uncollected.expiry.cron={{ .Values.config.uncollectedExpiry.cron }}
    uncollected.expiry.purge.days={{ .Values.config.uncollectedExpiry.purgeDays }}
    uncollected.expiry.start.days={{ .Values.config.uncollectedExpiry.startDays }}
    {{- end }}

    # TODO: remove dummy config for disused Performance Platform once
    # https://github.com/alphagov/licensify/pull/651 lands.
    performance.platform.service.url=http://localhost/
    performance.platform.bearer.token=disused
    performance.data.sender.cron.expression="0 0 1 * * ?"

    # TODO: remove dummy config for disused Places API client once
    # https://github.com/alphagov/licensify/pull/652 lands.
    places.api.url=http://localhost/
