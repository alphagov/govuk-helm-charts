name: linting
on: [push]
concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  render-charts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8   # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          show-progress: false
      - name: Run govuk-app-render
        run: ./govuk-app-render.sh
      - name: Archive rendered charts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02   # v4.6.2
        with:
          name: rendered-charts
          path: output/
          retention-days: 1

  helm-lint:
    runs-on: ubuntu-latest
    needs: render-charts
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0   # v5.0.0
        with:
          name: rendered-charts
          path: .

      - uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4   # v4.3.1

      - name: helm lint
        run: |
          EXITCODE=0
          for env in values/*; do
            [ -d "$env" ] || continue
            for chart in "$env"/*; do
              [ -d "$chart" ] || continue
              chart_name=$(basename "$chart")
              for app in "$chart"/*; do
                echo "helm lint for app $app with chart $chart_name"
                if ! output=$(helm lint --quiet -f "$app" "raw-charts/$chart_name"); then
                  echo "$output"
                  EXITCODE=1
                fi
              done
            done
          done
          exit "$EXITCODE"

  kubeconform:
    runs-on: ubuntu-latest
    needs: render-charts
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0   # v5.0.0
        with:
          name: rendered-charts
          path: .
      - name: kubeconform
        uses: docker://ghcr.io/yannh/kubeconform:latest-alpine
        with:
          entrypoint: /kubeconform
          args: >
            -kubernetes-version 1.31.6
            -schema-location default
            -schema-location
            "https://alphagov.github.io/govuk-crd-library/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json"
            -ignore-filename-pattern ".*/Chart.yaml"
            -summary
            -strict
            rendered-charts

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8   # v5.0.0
        with:
          show-progress: false
      - uses: ludeeus/action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38  # 2.0.0
        env:
          SHELLCHECK_OPTS: -xP SCRIPTDIR

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8   # v5.0.0
        with:
          show-progress: false
      - run: make lint

  promtool:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8   # v5.0.0
        with:
          show-progress: false
      - name: Run promtool checks
        uses: ./.github/actions/promtool
        with:
          args: >
            check rules $(find charts/monitoring-config/rules -name '*.yaml' \
              -not -name '*_tests.yaml')
      - name: Run promtool tests
        uses: ./.github/actions/promtool
        with:
          args: test rules charts/monitoring-config/rules/*_tests.yaml
